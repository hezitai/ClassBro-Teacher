{"remainingRequest":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/Daobi/ClassBroTeacher/src/views/account/incomeList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/src/views/account/incomeList.vue","mtime":1562665426000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            pickerOptions2: {\r\n                shortcuts: [{\r\n                    text: '最近一周',\r\n                    onClick(picker) {\r\n                        const end = new Date()\r\n                        const start = new Date()\r\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\r\n                        picker.$emit('pick', [start, end])\r\n                    }\r\n                }, {\r\n                    text: '最近一个月',\r\n                    onClick(picker) {\r\n                        const end = new Date()\r\n                        const start = new Date()\r\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\r\n                        picker.$emit('pick', [start, end])\r\n                    }\r\n                }, {\r\n                    text: '最近三个月',\r\n                    onClick(picker) {\r\n                        const end = new Date()\r\n                        const start = new Date()\r\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\r\n                        picker.$emit('pick', [start, end])\r\n                    }\r\n                }]\r\n            },\r\n            incomeList: false,\r\n            all: true,\r\n            otgb: false,\r\n            teacType: false,\r\n            sss: true,\r\n            cards: '',\r\n            num: '',\r\n            carddata: [],\r\n            tableDataBegin: [],\r\n            tableDataName: '',\r\n            tableDataEnd: [],\r\n            currentPage: 0,\r\n            pageSize: 0,\r\n            txmodal: false,\r\n            modal: false,\r\n            cardmodal: false,\r\n            modal_time: false,\r\n            total: 0,\r\n            limit: 15,\r\n            idss: [],\r\n            courseId: '',\r\n            val: 1,\r\n            data: '',\r\n            value: ['', ''],\r\n            disabledInput: true,\r\n            page: '',\r\n            otherMoney: null,\r\n            money: null,\r\n            otherMoneys: null,\r\n            moneys: null,\r\n            finishTimeFrom: '',\r\n            finishTimeTo: '',\r\n            withdrawed: '',\r\n            ruleForm: {\r\n                price1: '',\r\n                price2: '',\r\n                card: '',\r\n                phone: ''\r\n            },\r\n            username: '',\r\n            submitFormLoading: false,\r\n            rules: {\r\n                bankOfDeposit: [{\r\n                    required: true,\r\n                    message: '请输入开户支行',\r\n                    trigger: 'blur'\r\n                }],\r\n                phone: [{\r\n                    required: true,\r\n                    message: '请输入预留手机号',\r\n                    trigger: 'blur'\r\n                }],\r\n                // userName: [{\r\n                //     required: true,\r\n                //     message: '请输入开户人',\r\n                //     trigger: 'blur'\r\n                // }],\r\n                accountNumber: [{\r\n                    required: true,\r\n                    message: '请输入银行卡号',\r\n                    trigger: 'blur'\r\n                }],\r\n                userIdCard: [{\r\n                    required: true,\r\n                    message: '请输入身份证号码',\r\n                    trigger: 'blur'\r\n                }]\r\n            }\r\n        }\r\n    },\r\n    multipleSelection: [],\r\n    mounted() {\r\n        this.Time()\r\n        this.getMonthDays()\r\n        this.getMonthDay()\r\n        this.getTableData()\r\n        this.getcardlist()\r\n        this.getUser()\r\n        this.getgb()\r\n        this.teacinfo()\r\n    },\r\n    methods: {\r\n        search() {\r\n            this.getTableData()\r\n            this.getgb()\r\n        },\r\n        choosedata(value) {\r\n            this.value = value\r\n            this.finishTimeFrom = value[0] + ' 00:00:00'\r\n            this.finishTimeTo = value[1] + ' 23:23:59'\r\n            this.getTableData()\r\n            this.getgb()\r\n        },\r\n        Time(now) {\r\n            const year = new Date(now).getFullYear()\r\n            let month = new Date(now).getMonth() + 1\r\n            let date = new Date(now).getDate()\r\n            if (month < 10) month = '0' + month\r\n            if (date < 10) date = '0' + date\r\n            return year + '-' + month + '-' + date\r\n        },\r\n        getMonthDays(myMonth) {\r\n            const monthStartDate = new Date(new Date().getFullYear(), myMonth, 1)\r\n            const monthEndDate = new Date(new Date().getFullYear(), myMonth + 1, 1)\r\n            const days = (monthEndDate - monthStartDate) / (1000 * 60 * 60 * 24)\r\n            return days\r\n        },\r\n        getMonthDay(myMonth) {\r\n            var finishTimeFrom = this.Time(new Date(new Date().getFullYear(), new Date().getMonth(), 1))\r\n            var finishTimeTo = this.Time(new Date(new Date().getFullYear(), new Date().getMonth(), this\r\n                .getMonthDays(new Date().getMonth())))\r\n            this.finishTimeFrom = finishTimeFrom + ' 00:00:00'\r\n            this.finishTimeTo = finishTimeTo + ' 23:59:59'\r\n            this.data = [finishTimeFrom, finishTimeTo]\r\n        },\r\n        jx() {\r\n            this.$axios({\r\n                url: this.$api.baseURL + '/api/teacher/account/withdrawConfirm',\r\n                params: {\r\n                    'gb': this.ruleForm.price1,\r\n                    'otgb': this.ruleForm.price2\r\n                }\r\n            }).then(r => {\r\n                if (r.data.status == 200) {\r\n                    this.$refs.ruleForm.model.prices = r.data.body\r\n                    // vm.$message({\r\n                    //     message: r.body.msg,\r\n                    //     type: 'success'\r\n                    // });\r\n                    this.getcardlist()\r\n                }\r\n                if (r.data.status == 400) {\r\n                    this.$message({\r\n                        message: r.data.body.msg,\r\n                        type: 'warning'\r\n                    })\r\n                    this.getcardlist()\r\n                }\r\n            }).catch(er => {\r\n\r\n            })\r\n            // $.ajax({\r\n            //     type: 'get',\r\n            //     url: baseURL + '/api/teacher/account/withdrawConfirm',\r\n            //     dataType: 'json',\r\n            //     headers: {\r\n            //         'token': token\r\n            //     },\r\n            //     data: {\r\n            //         'gb': vm.ruleForm.price1,\r\n            //         'otgb': vm.ruleForm.price2\r\n            //     },\r\n            //     success: function(r) {\r\n            //         if (r.status == 200) {\r\n            //             vm.$refs.ruleForm.model.prices = r.body,\r\n            //             // vm.$message({\r\n            //             //     message: r.body.msg,\r\n            //             //     type: 'success'\r\n            //             // });\r\n            //             vm.getcardlist()\r\n            //         }\r\n            //         if (r.status == 400) {\r\n            //             vm.$message({\r\n            //                 message: r.body.msg,\r\n            //                 type: 'warning'\r\n            //             })\r\n            //             vm.getcardlist()\r\n            //         }\r\n            //     }\r\n            // })\r\n        },\r\n        teacinfo() {\r\n            this.$axios({\r\n                url: this.$api.baseURL + 'api/teacher/user/getMyInfo'\r\n            }).then(r => {\r\n              if (r.data.status === 400) {\r\n                        if (r.data.body.code === 4011) {\r\n                            this.$router.push({ path: \"/login\" });\r\n                        }\r\n                    }\r\n                const detail = r.data.body\r\n                if (detail.type == 2) {\r\n                    this.sss = false\r\n                    this.otgb = false\r\n                    this.all = false\r\n                } else {\r\n                    this.sss = true\r\n                    this.otgb = true\r\n                    this.all = true\r\n                }\r\n            }).catch(er => {\r\n\r\n            })\r\n            // $.ajax({\r\n            //     type: 'get',\r\n            //     dataType: 'json',\r\n            //     headers: {\r\n            //         'token': token\r\n            //     },\r\n            //     url: '' + baseURL + 'api/teacher/user/getMyInfo',\r\n            //     success: function(json) {\r\n            //         var detail = json.body\r\n            //         if (detail.type == 2) {\r\n            //             vm.sss = false\r\n            //             vm.otgb = false\r\n            //             vm.all = false\r\n            //         } else {\r\n            //             vm.sss = true\r\n            //             vm.otgb = true\r\n            //             vm.all = true\r\n            //         }\r\n            //     }\r\n            // })\r\n        },\r\n        getTableData: function() {\r\n            this.incomeList = true\r\n            this.$axios({\r\n                url: this.$api.baseURL + '/api/teacher/account/getIncomeList',\r\n                params: {\r\n                    'page': this.val,\r\n                    'limit': this.limit,\r\n                    'key': this.tableDataName,\r\n                    'timeFrom': this.finishTimeFrom,\r\n                    'timeTo': this.finishTimeTo,\r\n                    'withdrawed': 0\r\n                }\r\n            }).then(r => {\r\n                this.incomeList = false\r\n                this.tableDataEnd = r.data.body.list\r\n                this.total = r.data.body.totalCount\r\n                this.pageSize = r.data.body.totalCount\r\n                this.currentPage = r.data.body.currPage\r\n                this.money = r.data.body.totalMoney\r\n                this.otherMoney = r.data.body.totalOtherMoney\r\n            }).catch(er => {\r\n                this.incomeList = false\r\n            })\r\n            // var self = this\r\n            // $.ajax({\r\n            //     type: 'get',\r\n            //     dataType: 'json',\r\n            //     data: {\r\n            //         'token': token,\r\n            //         'page': this.val,\r\n            //         'limit': this.limit,\r\n            //         'key': this.tableDataName,\r\n            //         'timeFrom': this.finishTimeFrom,\r\n            //         'timeTo': this.finishTimeTo,\r\n            //         'withdrawed': 0\r\n            //     },\r\n            //     url: '' + baseURL + '/api/teacher/account/getIncomeList',\r\n            //     success: function(json) {\r\n            //         self.tableDataEnd = json.body.list\r\n            //         self.total = json.body.totalCount\r\n            //         self.pageSize = json.body.totalCount\r\n            //         self.currentPage = json.body.currPage\r\n            //         vm.money = json.body.totalMoney\r\n            //         vm.otherMoney = json.body.totalOtherMoney\r\n            //         loading.close()\r\n            //     }\r\n            // })\r\n        },\r\n        see(row, index) {\r\n            // if (row.scTypeed == 4) {\r\n            //     window.open('seller_detail-wy.html?id=' + row.courseId + '&wyid=' + row.courseName +\r\n            //         '&iswy=true')\r\n            // } else {\r\n            //     window.open('seller_detail.html?id=' + row.courseId + '')\r\n            // }\r\n\r\n            // if (row.spoType === 64) {\r\n            //     const Logistics2 = this.$router.resolve({\r\n            //         path: `/bigClassRoom`,\r\n            //         query: { id: row.courseId, parentId: null }\r\n            //     })\r\n            //     window.open(Logistics2.href)\r\n            // } else\r\n\r\n            if (row.courseType === 4) {\r\n                const Logistics1 = this.$router.resolve({\r\n                    path: `/sellerDetailWy`,\r\n                    query: { id: row.courseId, wyid: row.offCourseName }\r\n                })\r\n                window.open(Logistics1.href)\r\n            } else {\r\n                const Logistics = this.$router.resolve({\r\n                    path: `/sellerDetail`,\r\n                    query: { id: row.courseId }\r\n                })\r\n                window.open(Logistics.href)\r\n            }\r\n        },\r\n        getUser() {\r\n            this.$axios({\r\n                url: this.$api.baseURL + 'api/teacher/user/getMyInfo'\r\n            }).then(r => {\r\n              if (r.data.status === 400) {\r\n                        if (r.data.body.code === 4011) {\r\n                            this.$router.push({ path: \"/login\" });\r\n                        }\r\n                    }\r\n                this.user = r.data.body\r\n                this.username = r.data.body.username\r\n                var type = r.body.type\r\n                if (type == 1) {\r\n                    this.disabledInput = true\r\n                } else {\r\n                    this.disabledInput = false\r\n                }\r\n            }).catch(er => {\r\n\r\n            })\r\n            // $.ajax({\r\n            //     type: 'get',\r\n            //     url: baseURL + 'api/teacher/user/getMyInfo',\r\n            //     dataType: 'json',\r\n            //     headers: {\r\n            //         'token': token\r\n            //     },\r\n            //     success: function(r) {\r\n            //         vm.user = r.body\r\n            //         vm.username = r.body.username\r\n            //         var type = r.body.type\r\n            //         if (type == 1) {\r\n            //             vm.disabledInput = true\r\n            //         } else {\r\n            //             vm.disabledInput = false\r\n            //         }\r\n            //     }\r\n            // })\r\n        },\r\n        getgb() {\r\n            this.$axios({\r\n                url: this.$api.baseURL + 'api/teacher/account/findAccountInfo',\r\n                params: {\r\n                    'timeFrom': this.finishTimeFrom,\r\n                    'timeTo': this.finishTimeTo\r\n                }\r\n            }).then(r => {\r\n                this.otherMoneys = Number(r.data.body.money)\r\n                this.ruleForm.price1 = r.data.body.money\r\n                this.ruleForm.price2 = r.data.body.otherMoney\r\n            }).catch(er => {\r\n\r\n            })\r\n            // $.ajax({\r\n            //     type: 'get',\r\n            //     url: baseURL + 'api/teacher/account/findAccountInfo',\r\n            //     dataType: 'json',\r\n            //     headers: {\r\n            //         'token': token,\r\n            //         'timeFrom': this.finishTimeFrom,\r\n            //         'timeTo': this.finishTimeTo\r\n            //     },\r\n            //     success: function(r) {\r\n            //         vm.otherMoneys = Number(r.body.money)\r\n            //         vm.ruleForm.price1 = r.body.money\r\n            //         vm.ruleForm.price2 = r.body.otherMoney\r\n            //     }\r\n            // })\r\n        },\r\n        tx() {\r\n            this.txmodal = true\r\n            this.jx()\r\n        },\r\n        apply(row, index) {\r\n            this.modal = true\r\n        },\r\n        add() {\r\n            this.cardmodal = true\r\n        },\r\n        getcardlist() {\r\n            this.$axios({\r\n                url: this.$api.baseURL + 'api/teacher/bankcard/list',\r\n                params: {\r\n                    'page': 1,\r\n                    'limit': 1000\r\n                }\r\n            }).then(r => {\r\n                this.carddata = r.data.body.list\r\n                this.cards = r.data.body.list\r\n            }).catch(er => {\r\n\r\n            })\r\n            // $.ajax({\r\n            //     type: 'get',\r\n            //     dataType: 'json',\r\n            //     data: {\r\n            //         'token': token,\r\n            //         'page': 1,\r\n            //         'limit': 1000\r\n            //     },\r\n            //     url: '' + baseURL + 'api/teacher/bankcard/list',\r\n            //     success: function(json) {\r\n            //         vm.carddata = json.body.list\r\n            //         vm.cards = json.body.list\r\n            //     },\r\n            //     error: function(json) {}\r\n            // })\r\n        },\r\n        remove(row, index) {\r\n            const cardid = []\r\n            cardid.push('' + row.id + '')\r\n            this.$confirm('是否解绑?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            })\r\n                .then(_ => {\r\n                    this.$axios({\r\n                        url: this.$api.baseURL + 'api/teacher/bankcard/delete',\r\n                        method: 'post',\r\n                        data: JSON.stringify(\r\n                            cardid\r\n                        ),\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        }\r\n                    }).then(r => {\r\n                        if (r.data.status == 200) {\r\n                            this.$message({\r\n                                message: '解绑成功',\r\n                                type: 'success'\r\n                            })\r\n                            this.getcardlist()\r\n                        }\r\n                        if (r.data.status == 400) {\r\n                            this.$message({\r\n                                message: '解绑失败',\r\n                                type: 'warning'\r\n                            })\r\n                            this.getcardlist()\r\n                        }\r\n                    }).catch(er => {\r\n\r\n                    })\r\n                    // $.ajax({\r\n                    //     type: 'post',\r\n                    //     contentType: 'application/json',\r\n                    //     headers: {\r\n                    //         'token': token\r\n                    //     },\r\n                    //     data: JSON.stringify(\r\n                    //         cardid\r\n                    //     ),\r\n                    //     url: '' + baseURL + 'api/teacher/bankcard/delete',\r\n                    //     success: function(json) {\r\n                    //         if (json.status == 200) {\r\n                    //             vm.$message({\r\n                    //                 message: '解绑成功',\r\n                    //                 type: 'success'\r\n                    //             })\r\n                    //             vm.getcardlist()\r\n                    //         }\r\n                    //         if (json.status == 400) {\r\n                    //             vm.$message({\r\n                    //                 message: '解绑失败',\r\n                    //                 type: 'warning'\r\n                    //             })\r\n                    //             vm.getcardlist()\r\n                    //         }\r\n                    //     }\r\n                    // })\r\n                })\r\n                .catch(_ => {})\r\n        },\r\n        handleSizeChange(val) {\r\n            console.log(`每页 ${val} 条`)\r\n            this.limit = val\r\n            this.getTableData()\r\n        },\r\n\r\n        handleChangearea(val) {\r\n            let obj = {}\r\n            obj = this.selects.find((item) => {\r\n                return item.userId === val\r\n            })\r\n            this.userId = obj.userId\r\n            this.username = obj.username\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.val = val\r\n            this.getTableData()\r\n        },\r\n\r\n        fangyu(row) {\r\n            this.submitFormLoading = true\r\n            this.submitForm1(row)\r\n        },\r\n\r\n        submitForm1(formName) {\r\n            // vm.submitFormLoading = true;\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    this.$axios({\r\n                        method: 'post',\r\n                        url: this.$api.baseURL + '/api/teacher/account/withdrawToBank',\r\n                        data: {\r\n                            'gb': this.$refs.ruleForm.model.price1,\r\n                            'otgb': this.$refs.ruleForm.model.price2,\r\n                            'cardId': this.$refs.ruleForm.model.card\r\n                        },\r\n                        headers: {\r\n                            'Content-type': 'application/json'\r\n                        }\r\n                    }).then(r => {\r\n                        if (r.data.status == '200') {\r\n                            this.$message({\r\n                                message: r.data.body.msg,\r\n                                type: 'success'\r\n                            })\r\n                            this.txmodal = false\r\n                            this.getcardlist()\r\n                        }\r\n                        if (r.data.status == '400') {\r\n                            this.$message({\r\n                                message: r.data.body.msg,\r\n                                type: 'warning'\r\n                            })\r\n                        }\r\n                        this.submitFormLoading = false\r\n                    })\r\n                    // $.ajax({\r\n                    //     type: 'post',\r\n                    //     dataType: 'json',\r\n                    //     cache: false,\r\n                    //     // contentType: \"application/json\",\r\n                    //     headers: {\r\n                    //         'token': token\r\n                    //     },\r\n                    //     data: {\r\n                    //         'gb': this.$refs.ruleForm.model.price1,\r\n                    //         'otgb': this.$refs.ruleForm.model.price2,\r\n                    //         'cardId': this.$refs.ruleForm.model.card\r\n                    //     },\r\n                    //     url: '' + baseURL + '/api/teacher/account/withdrawToBank',\r\n                    //     success: function(json) {\r\n                    //         if (json.status == '200') {\r\n                    //             vm.$message({\r\n                    //                 message: json.body.msg,\r\n                    //                 type: 'success'\r\n                    //             })\r\n                    //             vm.txmodal = false\r\n                    //             vm.getcardlist()\r\n                    //         }\r\n                    //         if (json.status == '400') {\r\n                    //             vm.$message({\r\n                    //                 message: json.body.msg,\r\n                    //                 type: 'warning'\r\n                    //             })\r\n                    //         }\r\n                    //         _this.submitFormLoading = false\r\n                    //     }\r\n                    // })\r\n                }\r\n            })\r\n        },\r\n        submitForm(formName) {\r\n            // const datas = this.ruleForm\r\n            // const course_data = datas.course_data\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    this.$axios({\r\n                        url: this.$api.baseURL + 'api/teacher/bankcard/save',\r\n                        data: JSON.stringify({\r\n                            // \"teacId\": vm.teacId,\r\n                            'userName': this.username,\r\n                            'idCardNo': this.$refs.ruleForm.model.userIdCard,\r\n                            'reservedPhone': this.$refs.ruleForm.model\r\n                                .phone,\r\n                            'bankOfDeposit': this.$refs.ruleForm.model\r\n                                .bankOfDeposit,\r\n                            'accountNumber': this.$refs.ruleForm.model\r\n                                .accountNumber\r\n                            // \"bankName\": this.$refs.ruleForm.model.bankName,\r\n                        }),\r\n                        headers: {\r\n                            'Content-type': 'application/json'\r\n                        },\r\n                        method: 'post'\r\n                    }).then(r => {\r\n                        if (r.data.status == '200') {\r\n                            this.$message({\r\n                                message: '添加银行卡成功',\r\n                                type: 'success'\r\n                            })\r\n                            this.cardmodal = false\r\n                            this.getcardlist()\r\n                        }\r\n                        if (r.data.status == '400') {\r\n                            this.$message({\r\n                                message: r.data.body.msg,\r\n                                type: 'warning'\r\n                            })\r\n                        }\r\n                    }).catch(er => {\r\n\r\n                    })\r\n                    // $.ajax({\r\n                    //     type: 'post',\r\n                    //     dataType: 'json',\r\n                    //     cache: false,\r\n                    //     contentType: 'application/json',\r\n                    //     headers: {\r\n                    //         'token': token\r\n                    //     },\r\n                    //     data: JSON.stringify({\r\n                    //         // \"teacId\": vm.teacId,\r\n                    //         'userName': this.username,\r\n                    //         'idCardNo': this.$refs.ruleForm.model.userIdCard,\r\n                    //         'reservedPhone': this.$refs.ruleForm.model\r\n                    //             .phone,\r\n                    //         'bankOfDeposit': this.$refs.ruleForm.model\r\n                    //             .bankOfDeposit,\r\n                    //         'accountNumber': this.$refs.ruleForm.model\r\n                    //             .accountNumber\r\n                    //         // \"bankName\": this.$refs.ruleForm.model.bankName,\r\n                    //     }),\r\n                    //     url: '' + baseURL + 'api/teacher/bankcard/save',\r\n                    //     success: function(json) {\r\n                    //         if (json.status == '200') {\r\n                    //             vm.$message({\r\n                    //                 message: '添加银行卡成功',\r\n                    //                 type: 'success'\r\n                    //             })\r\n                    //             vm.cardmodal = false\r\n                    //             vm.getcardlist()\r\n                    //         }\r\n                    //         if (json.status == '400') {\r\n                    //             vm.$message({\r\n                    //                 message: json.body.msg,\r\n                    //                 type: 'warning'\r\n                    //             })\r\n                    //         }\r\n                    //     }\r\n                    // })\r\n                }\r\n            })\r\n        },\r\n        handleSelectionChange(val) {\r\n            this.multipleSelection = val\r\n            const ids = []\r\n            this.multipleSelection.map((item) => {\r\n                var id = item.id\r\n                ids.push('' + id + '')\r\n            })\r\n            this.selectedIDs = ids\r\n            console.log('多选', ids)\r\n            this.idss = this.selectedIDs\r\n            console.log(this.idss)\r\n        }\r\n    }\r\n}\r\n",null]}