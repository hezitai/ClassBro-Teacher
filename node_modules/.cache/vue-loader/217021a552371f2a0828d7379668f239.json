{"remainingRequest":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/Daobi/ClassBroTeacher/src/views/orders/orderList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/src/views/orders/orderList.vue","mtime":1596185135837},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            tableDataBegin: [],\r\n            tableDataName: '',\r\n            tableDataEnd: [],\r\n            currentPage: 0,\r\n            pageSize: 0,\r\n            total: 0,\r\n            limit: 15,\r\n            idss: [],\r\n            val: 1,\r\n            page: '',\r\n            ruleForm: {},\r\n            rules: {},\r\n            loading: false\r\n        }\r\n    },\r\n    multipleSelection: [],\r\n    mounted() {\r\n        this.getTableData()\r\n    },\r\n    methods: {\r\n        search() {\r\n            this.getTableData()\r\n        },\r\n        getTableData: function () {\r\n            this.loading = true\r\n            const loading = this.$loading({\r\n                lock: true,\r\n                text: 'Loading',\r\n                spinner: 'el-icon-loading'\r\n            })\r\n            this.$axios({\r\n                url: this.$api.baseURL + 'api/teacher/order/list',\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                params: {\r\n                    page: this.val,\r\n                    limit: this.limit,\r\n                    statused: 0,\r\n                    hasOrderPool: true,\r\n                    key: this.tableDataName\r\n                }\r\n            })\r\n                .then(r => {\r\n                    this.loading = false\r\n                    this.tableDataEnd = r.data.body.list\r\n                    this.total = r.data.body.totalCount\r\n                    this.pageSize = r.data.body.totalCount\r\n                    this.currentPage = r.data.body.currPage\r\n                    loading.close()\r\n                })\r\n                .catch(er => {\r\n                    this.loading = false\r\n                })\r\n        },\r\n        apply(row, index) {\r\n            this.$confirm(\r\n                '接单后，除不可抗力不可中途退单，是否确认接单？',\r\n                '提示',\r\n                {\r\n                    confirmButtonText: '确定接单',\r\n                    cancelButtonText: '我再看看',\r\n                    type: 'warning',\r\n                    // center: true,\r\n                    customClass: 'confirmAlert'\r\n                }\r\n            )\r\n                .then(_ => {\r\n                    this.loading = true\r\n                    this.$axios({\r\n                        url:\r\n                            this.$api.baseURL +\r\n                            'api/teacher/order/receiveOrder',\r\n                        data: {\r\n                            courseId: row.courseId\r\n                        },\r\n                        method: 'post'\r\n                        // headers: {\r\n                        //     'Content-Type': 'application/json'\r\n                        // }\r\n                    })\r\n                        .then(r => {\r\n                            this.loading = false\r\n                            if (r.data.status == 200) {\r\n                                this.$message({\r\n                                    message: r.data.body.msg,\r\n                                    type: 'success'\r\n                                })\r\n                                this.getTableData()\r\n                            }\r\n                            if (r.data.status == 400) {\r\n                                this.loading = false\r\n                                this.$message({\r\n                                    message: r.data.body.msg,\r\n                                    type: 'warning'\r\n                                })\r\n                            }\r\n                        })\r\n                        .catch(er => { })\r\n                })\r\n                .catch(_ => { })\r\n        },\r\n        see(row, index) {\r\n            // console.log(row)\r\n            // if (row.spoType === 64) {\r\n            //     window.open('bigClassroomInfo.html?id=' + row.courseId + '')\r\n            // } else if (row.scTypeed === 4) {\r\n            //     window.open(\r\n            //         'seller_detail-wy.html?id=' +\r\n            //             row.courseId +\r\n            //             '&wyid=' +\r\n            //             row.offCourseName +\r\n            //             '&iswy=true'\r\n            //     )\r\n            // } else {\r\n            //     window.open('seller_detail.html?id=' + row.courseId + '')\r\n            // }\r\n            if (row.spoType === 64) {\r\n                const Logistics2 = this.$router.resolve({\r\n                    path: `/bigClassRoom`,\r\n                    query: { id: row.courseId, parentId: null }\r\n                })\r\n                window.open(Logistics2.href)\r\n            } else if (row.courseType === 4) {\r\n                const Logistics1 = this.$router.resolve({\r\n                    path: `/sellerDetailWy`,\r\n                    query: { id: row.courseId, wyid: row.offCourseName }\r\n                })\r\n                window.open(Logistics1.href)\r\n            } else {\r\n                const Logistics = this.$router.resolve({\r\n                    path: `/sellerDetail`,\r\n                    query: { id: row.courseId }\r\n                })\r\n                window.open(Logistics.href)\r\n            }\r\n        },\r\n        noapply(row, index) {\r\n            this.$confirm('是否要退单?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            })\r\n                .then(_ => {\r\n                    this.$axios({\r\n                        url:\r\n                            this.$api.baseURL +\r\n                            'api/teacher/order/returnedOrder',\r\n                        data: {\r\n                            courseId: row.courseId\r\n                        },\r\n                        method: 'post'\r\n                    })\r\n                        .then(r => {\r\n                            if (r.data.status == 200) {\r\n                                this.$message({\r\n                                    message: r.data.body.msg,\r\n                                    type: 'success'\r\n                                })\r\n                                this.getTableData()\r\n                            }\r\n                            if (r.data.status == 400) {\r\n                                this.$message({\r\n                                    message: r.data.body.msg,\r\n                                    type: 'warning'\r\n                                })\r\n                            }\r\n                        })\r\n                        .catch(er => { })\r\n                })\r\n                .catch(_ => { })\r\n        },\r\n        handleSizeChange(val) {\r\n            console.log(`每页 ${val} 条`)\r\n            this.limit = val\r\n            this.getTableData()\r\n        },\r\n\r\n        handleChangearea(val) {\r\n            let obj = {}\r\n            obj = this.selects.find(item => {\r\n                return item.userId === val\r\n            })\r\n            this.userId = obj.userId\r\n            this.username = obj.username\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.val = val\r\n            this.getTableData()\r\n        },\r\n\r\n        handleSelectionChange(val) {\r\n            this.multipleSelection = val\r\n            const ids = []\r\n            this.multipleSelection.map(item => {\r\n                var id = item.id\r\n                ids.push('' + id + '')\r\n            })\r\n            this.selectedIDs = ids\r\n            console.log('多选', ids)\r\n            this.idss = this.selectedIDs\r\n        }\r\n    }\r\n}\r\n",null]}