{"remainingRequest":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/Daobi/ClassBroTeacher/src/layout/components/Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/src/layout/components/Navbar.vue","mtime":1562644940000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Bus from '@/eventBus'\nimport { mapGetters } from 'vuex'\nimport { getLocal, removeLocal, setCookie } from '@/utils/auth'\nimport Breadcrumb from '@/components/Breadcrumb'\nimport Hamburger from '@/components/Hamburger'\nimport plupload from 'plupload'\nexport default {\n    components: {\n        Breadcrumb,\n        Hamburger\n    },\n    data() {\n        return {\n            resetPasswordDialog: false,\n            oldPassword: '',\n            newPassword: '',\n            confirmPassword: '',\n            userName: {},\n            realNameCertification: {},\n            realnameConfirm: false,\n            uploaderOn: null,\n            uploaderOff: null,\n            loadingUploadImg: false,\n            idcardOn: '',\n            idcardOff: '',\n            isUploadOn: false,\n            isUploadOff: false,\n            uploadFilesLength: [],\n            realnameId: '',\n            realnameIdType: '',\n            ruleForm: {}\n            // username:{}\n        }\n    },\n    computed: {\n        ...mapGetters(['sidebar', 'avatar'])\n    },\n    mounted() {\n        this.getUser()\n    },\n    methods: {\n        tongzhi() {\n            this.$router.push({ path: '/messages/messages' })\n        },\n        // realnameConfirmhandleClose() {\n        //     this.realnameConfirm = false\n        //     this.uploaderOn.destroy()\n        //     this.uploaderOff.destroy()\n        //     this.realnameId = ''\n        //     this.realnameIdType = ''\n        // },\n        getUser() {\n            // this.userName = window\n            ('teacinfo')\n            this.userName = window.localStorage.getItem('teacinfo')\n            this.$axios({\n                url: this.$api.baseURL + 'api/teacher/user/getMyInfo'\n            }).then(r => {\n                if (r.data.status === 400) {\n                    if(r.data.body.code === 4011){\n                        this.$router.push({ path: '/login' })\n                    }\n                }\n                this.realNameCertification = r.data.body.realNameCertification\n                setCookie('teacid', 'teac' + r.data.body.id)\n                \n                // if (\n                //     this.realNameCertification == null ||\n                //     this.realNameCertification === 8\n                // ) {\n                //     this.showDialogEvent()\n                // }\n            })\n        },\n\n        // showDialogEvent: function() {\n        //     this.realnameConfirm = true\n\n        //     function GUID() {\n        //         this.date = new Date() /* 判断是否初始化过，如果初始化过以下代码，则以下代码将不再执行，实际中只执行一次 */\n        //         if (typeof this.newGUID !== 'function') {\n        //             /* 生成GUID码 */\n        //             GUID.prototype.newGUID = function() {\n        //                 this.date = new Date()\n        //                 var guidStr = ''\n        //                 var sexadecimalDate = this.hexadecimal(\n        //                     this.getGUIDDate(),\n        //                     16\n        //                 )\n        //                 var sexadecimalTime = this.hexadecimal(\n        //                     this.getGUIDTime(),\n        //                     16\n        //                 )\n        //                 for (var i = 0; i < 9; i++) {\n        //                     guidStr += Math.floor(Math.random() * 16).toString(\n        //                         16\n        //                     )\n        //                 }\n        //                 guidStr += sexadecimalDate\n        //                 guidStr += sexadecimalTime\n        //                 while (guidStr.length < 32) {\n        //                     guidStr += Math.floor(Math.random() * 16).toString(\n        //                         16\n        //                     )\n        //                 }\n        //                 return this.formatGUID(guidStr)\n        //             }\n        //             /* * 功能：获取当前日期的GUID格式，即8位数的日期：19700101 * 返回值：返回GUID日期格式的字条串 */\n        //             GUID.prototype.getGUIDDate = function() {\n        //                 return (\n        //                     this.date.getFullYear() +\n        //                     this.addZero(this.date.getMonth() + 1) +\n        //                     this.addZero(this.date.getDay())\n        //                 )\n        //             }\n        //             /* * 功能：获取当前时间的GUID格式，即8位数的时间，包括毫秒，毫秒为2位数：12300933 * 返回值：返回GUID日期格式的字条串 */\n        //             GUID.prototype.getGUIDTime = function() {\n        //                 return (\n        //                     this.addZero(this.date.getHours()) +\n        //                     this.addZero(this.date.getMinutes()) +\n        //                     this.addZero(this.date.getSeconds()) +\n        //                     this.addZero(\n        //                         parseInt(this.date.getMilliseconds() / 10)\n        //                     )\n        //                 )\n        //             }\n        //             /* * 功能: 为一位数的正整数前面添加0，如果是可以转成非NaN数字的字符串也可以实现 * 参数: 参数表示准备再前面添加0的数字或可以转换成数字的字符串 * 返回值: 如果符合条件，返回添加0后的字条串类型，否则返回自身的字符串 */\n        //             GUID.prototype.addZero = function(num) {\n        //                 if (\n        //                     Number(num).toString() != 'NaN' &&\n        //                     num >= 0 &&\n        //                     num < 10\n        //                 ) {\n        //                     return '0' + Math.floor(num)\n        //                 } else {\n        //                     return num.toString()\n        //                 }\n        //             }\n        //             /*  * 功能：将y进制的数值，转换为x进制的数值 * 参数：第1个参数表示欲转换的数值；第2个参数表示欲转换的进制；第3个参数可选，表示当前的进制数，如不写则为10 * 返回值：返回转换后的字符串 */\n        //             GUID.prototype.hexadecimal = function(num, x, y) {\n        //                 if (y != undefined) {\n        //                     return parseInt(num.toString(), y).toString(x)\n        //                 } else {\n        //                     return parseInt(num.toString()).toString(x)\n        //                 }\n        //             }\n        //             /* * 功能：格式化32位的字符串为GUID模式的字符串 * 参数：第1个参数表示32位的字符串 * 返回值：标准GUID格式的字符串 */\n        //             GUID.prototype.formatGUID = function(guidStr) {\n        //                 var str1 = guidStr.slice(0, 8) + '-'\n        //                 var str2 = guidStr.slice(8, 12) + '-'\n        //                 var str3 = guidStr.slice(12, 16) + '-'\n        //                 var str4 = guidStr.slice(16, 20) + '-'\n        //                 var str5 = guidStr.slice(20)\n        //                 return str1 + str2 + str3 + str4 + str5\n        //             }\n        //         }\n        //     }\n        //     var accessid,\n        //         host,\n        //         policyBase64,\n        //         signature,\n        //         g_dirname,\n        //         uploadFileNameOn,\n        //         uploadFileNameOff,\n        //         uploadFilesTimes\n        //     var guid = new GUID()\n        //     this.$axios({\n        //         url:\n        //             this.$api.baseURL +\n        //             'api/oss/getAliOSSUploadSign?dir=' +\n        //             'sensitive-information/' +\n        //             guid.newGUID() +\n        //             '/'\n        //     }).then(r => {\n        //         if (r.data.status == 200) {\n        //             accessid = r.data.body.accessid\n        //             host = r.data.body.host\n        //             policyBase64 = r.data.body.policy\n        //             signature = r.data.body.signature\n        //             g_dirname = r.data.body.dir\n\n        //             function formatFileName1(up, filename) {\n        //                 uploadFileNameOn = encodeURIComponent(filename)\n        //                 console.log(uploadFileNameOn)\n        //                 set_upload_param1(up, filename, false)\n        //             }\n\n        //             function set_upload_param1(up, filename, ret) {\n        //                 if (ret) {\n        //                     formatFileName1(up, filename)\n        //                 }\n        //                 var new_multipart_params = {\n        //                     key: g_dirname + filename,\n        //                     policy: policyBase64,\n        //                     OSSAccessKeyId: accessid,\n        //                     success_action_status: '200', // 让服务端返回200,不然，默认会返回204\n        //                     signature: signature\n        //                 }\n\n        //                 up.setOption({\n        //                     url: host,\n        //                     multipart_params: new_multipart_params\n        //                 })\n\n        //                 up.start()\n        //             }\n        //             var _this = this\n        //             _this.uploaderOn = new plupload.Uploader({\n        //                 runtimes: 'html5,flash,silverlight,html4',\n        //                 browse_button: 'userIdcardOn',\n        //                 flash_swf_url: 'js/Moxie.swf',\n        //                 silverlight_xap_url: 'js/Moxie.xap',\n        //                 multi_selection: false,\n        //                 url: 'http://oss.aliyuncs.com',\n        //                 init: {\n        //                     PostInit: function() {\n        //                         document.getElementById('ossfile1').innerHTML =\n        //                             ''\n        //                     },\n        //                     FilesAdded: function(up, files) {\n        //                         console.log(files)\n        //                         plupload.each(files, function(file) {\n        //                             document.getElementById(\n        //                                 'ossfile1'\n        //                             ).innerHTML +=\n        //                                 '<div id=\"' +\n        //                                 file.id +\n        //                                 '\" style=\"padding: 10px 0;\">' +\n        //                                 file.name +\n        //                                 ' (' +\n        //                                 plupload\n        //                                     .formatSize(file.size)\n        //                                     .split(' ')[0] +\n        //                                 plupload\n        //                                     .formatSize(file.size)\n        //                                     .split(' ')[1]\n        //                                     .toUpperCase() +\n        //                                 ')<b></b>' +\n        //                                 '<div class=\"progress\" style=\"display:none;\"><div class=\"progress-bar\" style=\"width: 0%\"></div></div>' +\n        //                                 '</div>'\n        //                         })\n        //                         set_upload_param1(_this.uploaderOn, '', false)\n        //                         return false\n        //                     },\n\n        //                     BeforeUpload: function(up, file) {\n        //                         set_upload_param1(up, file.name, true)\n        //                         _this.loadingUploadImg = true\n        //                     },\n\n        //                     UploadProgress: function(up, file) {\n        //                         // _this.updataFiles = true;\n        //                         var d = document.getElementById(file.id)\n        //                         d.getElementsByClassName(\n        //                             'progress'\n        //                         )[0].style.display = 'block'\n        //                         d.getElementsByTagName('b')[0].innerHTML =\n        //                             '<span style=\"display:inline-block;padding-left:10px;\">' +\n        //                             file.percent +\n        //                             '%</span>'\n        //                         var prog = d.getElementsByTagName('div')[0]\n        //                         var progBar = prog.getElementsByTagName(\n        //                             'div'\n        //                         )[0]\n        //                         progBar.style.width = file.percent + '%'\n        //                         progBar.setAttribute(\n        //                             'aria-valuenow',\n        //                             file.percent\n        //                         )\n        //                     },\n        //                     FileUploaded: function(up, file, info) {\n        //                         if (info.status == 200) {\n        //                             _this.isUploadOn = true\n        //                             _this.idcardOn =\n        //                                 host +\n        //                                 '/' +\n        //                                 g_dirname +\n        //                                 uploadFileNameOn\n        //                         } else {\n        //                             document\n        //                                 .getElementById(file.id)\n        //                                 .getElementsByTagName(\n        //                                     'b'\n        //                                 )[0].innerHTML = info.response\n        //                         }\n        //                         _this.loadingUploadImg = false\n        //                     },\n        //                     Error: function(up, err) {\n        //                         _this.$message({\n        //                             type: 'error',\n        //                             message: '证件上传失败， 请刷新页面重试'\n        //                         })\n        //                         _this.uploaderOn.destroy()\n        //                         _this.loadingUploadImg = false\n        //                     }\n        //                 }\n        //             })\n        //             _this.uploaderOn.init()\n\n        //             function formatFileName2(up, filename) {\n        //                 uploadFileNameOff = encodeURIComponent(filename)\n        //                 console.log(uploadFileNameOff)\n        //                 set_upload_param2(up, filename, false)\n        //             }\n\n        //             function set_upload_param2(up, filename, ret) {\n        //                 if (ret) {\n        //                     formatFileName2(up, filename)\n        //                 }\n        //                 var new_multipart_params = {\n        //                     key: g_dirname + filename,\n        //                     policy: policyBase64,\n        //                     OSSAccessKeyId: accessid,\n        //                     success_action_status: '200', // 让服务端返回200,不然，默认会返回204\n        //                     signature: signature\n        //                 }\n\n        //                 up.setOption({\n        //                     url: host,\n        //                     multipart_params: new_multipart_params\n        //                 })\n\n        //                 up.start()\n        //             }\n\n        //             _this.uploaderOff = new plupload.Uploader({\n        //                 runtimes: 'html5,flash,silverlight,html4',\n        //                 browse_button: 'userIdcardOff',\n        //                 flash_swf_url: 'js/Moxie.swf',\n        //                 silverlight_xap_url: 'js/Moxie.xap',\n        //                 multi_selection: false,\n        //                 url: 'http://oss.aliyuncs.com',\n        //                 init: {\n        //                     PostInit: function() {\n        //                         document.getElementById('ossfile2').innerHTML =\n        //                             ''\n        //                     },\n        //                     FilesAdded: function(up, files) {\n        //                         console.log(files)\n        //                         plupload.each(files, function(file) {\n        //                             document.getElementById(\n        //                                 'ossfile2'\n        //                             ).innerHTML +=\n        //                                 '<div id=\"' +\n        //                                 file.id +\n        //                                 '\" style=\"padding: 10px 0;\">' +\n        //                                 file.name +\n        //                                 ' (' +\n        //                                 plupload\n        //                                     .formatSize(file.size)\n        //                                     .split(' ')[0] +\n        //                                 plupload\n        //                                     .formatSize(file.size)\n        //                                     .split(' ')[1]\n        //                                     .toUpperCase() +\n        //                                 ')<b></b>' +\n        //                                 '<div class=\"progress\" style=\"display:none;\"><div class=\"progress-bar\" style=\"width: 0%\"></div></div>' +\n        //                                 '</div>'\n        //                         })\n        //                         set_upload_param2(_this.uploaderOff, '', false)\n        //                         return false\n        //                     },\n\n        //                     BeforeUpload: function(up, file) {\n        //                         set_upload_param2(up, file.name, true)\n        //                         _this.loadingUploadImg = true\n        //                     },\n\n        //                     UploadProgress: function(up, file) {\n        //                         // _this.updataFiles = true;\n        //                         var d = document.getElementById(file.id)\n        //                         d.getElementsByClassName(\n        //                             'progress'\n        //                         )[0].style.display = 'block'\n        //                         d.getElementsByTagName('b')[0].innerHTML =\n        //                             '<span style=\"display:inline-block;padding-left:10px;\">' +\n        //                             file.percent +\n        //                             '%</span>'\n        //                         var prog = d.getElementsByTagName('div')[0]\n        //                         var progBar = prog.getElementsByTagName(\n        //                             'div'\n        //                         )[0]\n        //                         progBar.style.width = file.percent + '%'\n        //                         progBar.setAttribute(\n        //                             'aria-valuenow',\n        //                             file.percent\n        //                         )\n        //                     },\n        //                     FileUploaded: function(up, file, info) {\n        //                         if (info.status == 200) {\n        //                             _this.isUploadOff = true\n        //                             _this.idcardOff =\n        //                                 host +\n        //                                 '/' +\n        //                                 g_dirname +\n        //                                 uploadFileNameOff\n        //                         } else {\n        //                             document\n        //                                 .getElementById(file.id)\n        //                                 .getElementsByTagName(\n        //                                     'b'\n        //                                 )[0].innerHTML = info.response\n        //                         }\n        //                         _this.loadingUploadImg = false\n        //                     },\n        //                     Error: function(up, err) {\n        //                         _this.$message({\n        //                             type: 'error',\n        //                             message: '证件上传失败， 请刷新页面重试'\n        //                         })\n        //                         _this.uploaderOff.destroy()\n        //                         _this.loadingUploadImg = false\n        //                     }\n        //                 }\n        //             })\n        //             _this.uploaderOff.init()\n        //         }\n        //     })\n        // },\n        // realnameConfirmSubmit: function() {\n        //     var _this = this\n        //     var url\n        //     if (this.realNameCertification == null) {\n        //         url =\n        //             this.$api.baseURL + 'api/teacher/user/saveRealNameAuthOSS'\n        //     } else if (this.realNameCertification == 8) {\n        //         url =\n        //             this.$api.baseURL +\n        //             'api/teacher/user/updateRealNameAuthOSS'\n        //     }\n        //     // this.idcardOn = 'https://www.baidu.com/img/baidu_jgylogo3.gif';\n        //     // this.idcardOff = 'https://www.baidu.com/img/baidu_jgylogo3.gif';\n        //     this.$axios({\n        //         url: url,\n        //         method: 'post',\n        //         headers: {\n        //             'Content-Type': 'application/json'\n        //         },\n        //         data: JSON.stringify({\n        //             idCardObverseUrl: this.idcardOn,\n        //             idCardReversedUrl: this.idcardOff,\n        //             idCardNo: this.realnameId\n        //             // certificateType:this.realnameIdType,\n        //         })\n        //     }).then(r => {\n        //         if (r.data.status == 200) {\n        //             this.$message({\n        //                 type: 'success',\n        //                 message: r.data.body.msg\n        //             })\n        //             this.realnameConfirm = false\n        //             this.uploaderOn.destroy()\n        //             this.uploaderOff.destroy()\n        //             this.realnameId = ''\n        //             this.realnameIdType = ''\n        //         } else {\n        //             this.$message({\n        //                 type: 'warning',\n        //                 message: r.data.body.msg\n        //             })\n        //         }\n        //     })\n        // },\n\n        resetPassword() {\n            this.resetPasswordDialog = true\n            this.getUser()\n        },\n        resetPasswordHandleClose() {\n            this.oldPassword = ''\n            this.newPassword = ''\n            this.confirmPassword = ''\n            this.resetPasswordDialog = false\n        },\n        resetPasswordSubmit() {\n            if (this.newPassword === this.confirmPassword) {\n                this.$axios({\n                    url: this.$api.baseURL + 'api/teacher/user/updatePws',\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded',\n                        token: window.localStorage.getItem('teactoken')\n                    },\n                    method: 'post',\n                    data: {\n                        oldPws: this.oldPassword,\n                        newPws: this.confirmPassword,\n                        userId: this.userName.id\n                    }\n                })\n                    .then(r => {\n                        if (r.data.status === 200) {\n                            this.$message({\n                                type: 'success',\n                                message: r.data.body.msg\n                            })\n                            // window.setInterval(() => {\n                            //     window.location.reload()\n                            // }, 1200)\n                            this.resetPasswordHandleClose()\n                        } else {\n                            this.$message({\n                                type: 'warning',\n                                message: r.data.body.msg\n                            })\n                        }\n                    })\n                    .catch(er => {\n                        this.$message({\n                            type: 'warning',\n                            message: '网络出现故障，请刷新重试'\n                        })\n                    })\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '两次密码输入不正确，请重试'\n                })\n            }\n        },\n        toggleSideBar() {\n            // console.log(this.$api.navBarWidth)\n            // console.log(document.getElementsByClassName('sidebar-container')[0].offsetWidth)\n            if (document.getElementsByClassName('sidebar-container')[0].offsetWidth === 210) {\n                this.$api.navBarWidth = false\n            } else if (document.getElementsByClassName('sidebar-container')[0].offsetWidth === 54) {\n                this.$api.navBarWidth = true\n            } else {\n                this.$api.navBarWidth = null\n            }\n            // this.$api.navBarWidth = !this.$api.navBarWidth\n            this.$store.dispatch('app/toggleSideBar')\n            // console.log(this.$api.navBarWidth)\n            Bus.$emit('navBarWidth', {\n                navBarWidth: this.$api.navBarWidth\n            })\n        },\n        async logout() {\n            // await this.$store.dispatch('user/logout')\n            removeLocal('teactoken')\n            removeLocal('teacinfo')\n            this.$router.push(`/login?redirect=${this.$route.fullPath}`)\n        },\n        takeIM() {\n            // window.open(\n\n            //     this.$api.url + '/teacherweb' + '/im/main.html',\n            //     '_blank',\n            //     'top=20,left=20,width=800,height=600'\n            // )\n            // this.$api.redirectURL /teacherweb\n            window.open(this.$api.baseURL + 'teacherweb/im/main.html', '_blank', 'top=20,left=20,width=800,height=600')\n        }\n    }\n}\n",null]}