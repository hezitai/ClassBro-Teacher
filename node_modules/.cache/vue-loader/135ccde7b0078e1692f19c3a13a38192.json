{"remainingRequest":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/Daobi/ClassBroTeacher/src/views/myorders/myCourse.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/src/views/myorders/myCourse.vue","mtime":1563276772000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// import { stringify } from 'querystring'\r\nimport plupload from 'plupload'\r\n// import plupload from './@/static/plupload.full.min.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            loadingCourse: false,\r\n            uploader: null,\r\n            uploadFilesLength: [],\r\n            uploadButtonEvent: null,\r\n            uploadFilesArray: [],\r\n            updataFiles: false,\r\n            isTest: false,\r\n\r\n            uploadDropBoxDialog: false,\r\n            uploadUseData: {},\r\n            pciker1: {\r\n                disabledDate: time => {\r\n                    return time.getTime() < Date.now() - 8.64e7\r\n                }\r\n            },\r\n            pciker2: {\r\n                disabledDate: time => {\r\n                    const beginDateVal = this.ruleForm.value1\r\n                    if (beginDateVal) {\r\n                        return time.getTime() < beginDateVal\r\n                    }\r\n                }\r\n            },\r\n            uploadStatus: 'exception',\r\n            uploadPercent: 20,\r\n            showUploadProgress: false,\r\n            span: 0,\r\n            dropboxCourse: false,\r\n            fileListnum: 0,\r\n            fileList: [],\r\n            uploadImgTimes: 0,\r\n            formdata: new FormData(), // 创建一个上传图片用的new formdata\r\n            btnstatus: false,\r\n            btnval: '确 定',\r\n            value1: '',\r\n            value2: '',\r\n            tableDataBegin: [],\r\n            tableDataName: '',\r\n            tableDataEnd: [],\r\n            currentPage: 0,\r\n            pageSize: 0,\r\n            modal: false,\r\n            modal_time: false,\r\n            total: 0,\r\n            limit: 15,\r\n            idss: [],\r\n            courseId: '',\r\n            classrooms: '',\r\n            classroom: '',\r\n            val: 1,\r\n            page: '',\r\n            ruleForm: {\r\n                title: '',\r\n                value1: '',\r\n                value2: '',\r\n                classroom: '',\r\n                description: '',\r\n                times: '',\r\n                explain: ''\r\n            },\r\n            rules: {\r\n                title: [{\r\n                    required: true,\r\n                    message: '请填写课程标题',\r\n                    trigger: 'blur'\r\n                }],\r\n                value1: [{\r\n                    required: true,\r\n                    message: '请选择排课时间',\r\n                    trigger: 'change'\r\n                }],\r\n                value2: [{\r\n                    required: true,\r\n                    message: '请选择排课时间',\r\n                    trigger: 'change'\r\n                }],\r\n                description: [{\r\n                    required: true,\r\n                    message: '请填写课程详情',\r\n                    trigger: 'blur'\r\n                }],\r\n                times: [{\r\n                    required: true,\r\n                    message: '请填写赠送时长',\r\n                    trigger: 'blur'\r\n                }],\r\n                classroom: [{\r\n                    required: true,\r\n                    message: '请填写赠送时长',\r\n                    trigger: 'blur'\r\n                }],\r\n                explain: [{\r\n                    required: true,\r\n                    message: '请填写赠送说明',\r\n                    trigger: 'blur'\r\n                }]\r\n            }\r\n        }\r\n    },\r\n    multipleSelection: [],\r\n    mounted() {\r\n        this.isNTest()\r\n        this.getTableData()\r\n    },\r\n\r\n    methods: {\r\n        isNTest() {\r\n            if (this.$api.baseURL === 'http://121.43.174.41/') {\r\n                this.isTest = true\r\n            } else {\r\n                this.isTest = false\r\n            }\r\n        },\r\n\r\n        search() {\r\n            this.getTableData()\r\n        },\r\n        getTableData: function() {\r\n            this.loadingCourse = true\r\n            this.$axios({\r\n                url: this.$api.baseURL + 'api/teacher/order/list',\r\n                method: 'get',\r\n                params: {\r\n                    page: this.val,\r\n                    limit: this.limit,\r\n                    statused: 15,\r\n                    // \"hasOrderPool\": true,\r\n                    key: this.tableDataName\r\n                }\r\n            }).then(r => {\r\n                this.tableDataEnd = r.data.body.list\r\n                this.total = r.data.body.totalCount\r\n                this.pageSize = r.data.body.totalCount\r\n                this.currentPage = r.data.body.currPage\r\n                this.loadingCourse = false\r\n            }).catch(er => {\r\n                this.loadingCourse = false\r\n            })\r\n        },\r\n        apply(row, index) {\r\n            this.modal = true\r\n            this.ruleForm.title = ''\r\n            this.ruleForm.course_time = ''\r\n            this.ruleForm.description = ''\r\n            this.courseId = row.courseId\r\n        },\r\n        change_classroom(val) {},\r\n        see(row, index, offCourseName) {\r\n            // const routeData = this.$router.resolve({\r\n            //     name: 'searchGoods',\r\n            //     query: params,\r\n            //     params: { catId: params.catId }\r\n            // })\r\n            // window.open(routeData.href, '_blank')\r\n            if (row.spoType === 64) {\r\n                const Logistics2 = this.$router.resolve({\r\n                    path: `/bigClassRoom`,\r\n                    query: { id: row.courseId, parentId: null }\r\n                })\r\n                window.open(Logistics2.href)\r\n            } else if (row.courseType === 4) {\r\n                const Logistics1 = this.$router.resolve({\r\n                    path: `/sellerDetailWy`,\r\n                    query: { id: row.courseId, wyid: row.offCourseName }\r\n                })\r\n                window.open(Logistics1.href)\r\n            } else {\r\n                const Logistics = this.$router.resolve({\r\n                    path: `/sellerDetail`,\r\n                    query: { id: row.courseId }\r\n                })\r\n                window.open(Logistics.href)\r\n            }\r\n        },\r\n\r\n        give_time(row, index) {\r\n            this.ruleForm.classroom = ''\r\n            this.ruleForm.times = ''\r\n            this.ruleForm.explain = ''\r\n            this.modal_time = true\r\n            this.courseId = row.courseId\r\n            this.get_classroom()\r\n        },\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate(valid => {\r\n                if (valid) {\r\n                    if (this.ruleForm.value1 >= this.ruleForm.value2) {\r\n                        this.$message({\r\n                            message: '开始时间不能大于结束时间',\r\n                            type: 'warning'\r\n                        })\r\n                        return\r\n                    }\r\n                    const sdate = new Date(this.ruleForm.value1)\r\n                    const now = new Date(this.ruleForm.value2)\r\n                    const days = now.getTime() - sdate.getTime()\r\n                    const day = parseInt(days / (1000 * 60))\r\n                    if (day < 30) {\r\n                        this.$message({\r\n                            message: '时间相差必须30分钟',\r\n                            type: 'warning'\r\n                        })\r\n                        return\r\n                    }\r\n                    this.btnstatus = true\r\n                    this.btnval = '加载中'\r\n                    this.$axios({\r\n                        url: this.$api.baseURL + '/api/teacher/order/putClassroom',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        method: 'post',\r\n                        data: JSON.stringify({\r\n                            cdId: this.courseId,\r\n                            name: this.$refs.ruleForm.model.title,\r\n                            startTime: this.$refs.ruleForm.model.value1 + ':00',\r\n                            endTime: this.$refs.ruleForm.model.value2 + ':00',\r\n                            description: this.$refs.ruleForm.model.description,\r\n                            roomType: 1\r\n                        })\r\n                    }).then(r => {\r\n                        if (r.data.status === 200) {\r\n                            this.$message({\r\n                                message: r.data.body.msg,\r\n                                type: 'success'\r\n                            })\r\n                            this.btnstatus = false\r\n                            this.btnval = '确定'\r\n                            this.modal = false\r\n                        }\r\n                        if (r.data.status === 400) {\r\n                            this.$message({\r\n                                message: r.data.body.msg,\r\n                                type: 'warning'\r\n                            })\r\n                            this.btnstatus = false\r\n                            this.btnval = '确定'\r\n                        }\r\n                    }).catch(r => {\r\n\r\n                    })\r\n                } else {\r\n                    console.log('error submit!!')\r\n                    return false\r\n                }\r\n            })\r\n        },\r\n        submitForm1(formName) {\r\n            this.$refs[formName].validate(valid => {\r\n                if (valid) {\r\n                    this.btnstatus = true\r\n                    this.btnval = '加载中'\r\n                    this.$axios({\r\n                        url: this.$api.baseURL + '/api/teacher/account/presenterTime',\r\n                        method: 'post',\r\n                        data: {\r\n                            classroomId: this.$refs.ruleForm.model.classroom,\r\n                            time: Number(this.$refs.ruleForm.model.times),\r\n                            explain: Number(this.$refs.ruleForm.model.explain)\r\n                        }\r\n                    }).then(r => {\r\n                        if (r.data.status === 200) {\r\n                            this.$message({\r\n                                message: r.data.body.msg,\r\n                                type: 'success'\r\n                            })\r\n                            this.btnval = '确定'\r\n                            this.btnstatus = false\r\n                            this.modal = false\r\n                            this.modal_time = false\r\n                        }\r\n                        if (r.data.status === 400) {\r\n                            this.$message({\r\n                                message: r.data.body.msg,\r\n                                type: 'warning'\r\n                            })\r\n                            this.btnval = '确定'\r\n                            this.btnstatus = false\r\n                            this.modal = false\r\n                        }\r\n                    }).catch(er => {\r\n\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        noapply(row, index) {\r\n            this.$confirm('是否要确认结课?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            })\r\n                .then(_ => {\r\n                    this.$axios({\r\n                        url: this.$api.baseURL + 'api/teacher/order/applyFinishCourse',\r\n                        data: {\r\n                            courseId: row.courseId\r\n                        },\r\n                        method: 'post'\r\n                    }).then(r => {\r\n                        if (r.data.status === 200) {\r\n                            this.$message({\r\n                                message: '您已提交了结课申请，请等待师资主管审核',\r\n                                type: 'success'\r\n                            })\r\n                            this.getTableData()\r\n                        }\r\n                        if (r.data.status === 400) {\r\n                            this.$message({\r\n                                message: r.data.body.msg,\r\n                                type: 'warning'\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n                .catch(_ => {})\r\n        },\r\n\r\n        handleSizeChange(val) {\r\n            console.log(`每页 ${val} 条`)\r\n            this.limit = val\r\n            this.getTableData()\r\n        },\r\n\r\n        handleChangearea(val) {\r\n            let obj = {}\r\n            obj = this.selects.find(item => {\r\n                return item.userId === val\r\n            })\r\n            this.userId = obj.userId\r\n            this.username = obj.username\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.val = val\r\n            this.getTableData()\r\n        },\r\n        get_classroom() {\r\n            this.$axios({\r\n                url: this.$api.baseURL + '/api/teacher/order/queryClassroomsByCourseId',\r\n                params: {\r\n                    courseId: this.courseId,\r\n                    status: 14\r\n                }\r\n            }).then(r => {\r\n                this.classrooms = r.data.body.list\r\n            }).catch(er => {\r\n\r\n            })\r\n        },\r\n        handleSelectionChange(val) {\r\n            this.multipleSelection = val\r\n            const ids = []\r\n            this.multipleSelection.map(item => {\r\n                var id = item.id\r\n                ids.push('' + id + '')\r\n            })\r\n            this.selectedIDs = ids\r\n            console.log('多选', ids)\r\n            this.idss = this.selectedIDs\r\n            console.log(this.idss)\r\n        },\r\n        uploadDropbox: function(val, id) {\r\n            this.uploadDropBoxDialog = true\r\n            this.uploadUseData = val\r\n            function GUID() {\r\n                this.date = new Date() /* 判断是否初始化过，如果初始化过以下代码，则以下代码将不再执行，实际中只执行一次 */\r\n                if (typeof this.newGUID !== 'function') {\r\n                    /* 生成GUID码 */\r\n                    GUID.prototype.newGUID = function() {\r\n                        this.date = new Date()\r\n                        var guidStr = ''\r\n                        var sexadecimalDate = this.hexadecimal(this.getGUIDDate(), 16)\r\n                        var sexadecimalTime = this.hexadecimal(this.getGUIDTime(), 16)\r\n                        for (var i = 0; i < 9; i++) {\r\n                            guidStr += Math.floor(Math.random() * 16).toString(16)\r\n                        }\r\n                        guidStr += sexadecimalDate\r\n                        guidStr += sexadecimalTime\r\n                        while (guidStr.length < 32) {\r\n                            guidStr += Math.floor(Math.random() * 16).toString(16)\r\n                        }\r\n                        return this.formatGUID(guidStr)\r\n                    }\r\n                    /* * 功能：获取当前日期的GUID格式，即8位数的日期：19700101 * 返回值：返回GUID日期格式的字条串 */\r\n                    GUID.prototype.getGUIDDate = function() {\r\n                        return this.date.getFullYear() + this.addZero(this.date.getMonth() + 1) + this.addZero(this.date\r\n                            .getDay())\r\n                    }\r\n                    /* * 功能：获取当前时间的GUID格式，即8位数的时间，包括毫秒，毫秒为2位数：12300933 * 返回值：返回GUID日期格式的字条串 */\r\n                    GUID.prototype.getGUIDTime = function() {\r\n                        return this.addZero(this.date.getHours()) + this.addZero(this.date.getMinutes()) + this.addZero(\r\n                            this\r\n                                .date.getSeconds()) + this.addZero(parseInt(this.date.getMilliseconds() / 10))\r\n                    }\r\n                    /* * 功能: 为一位数的正整数前面添加0，如果是可以转成非NaN数字的字符串也可以实现 * 参数: 参数表示准备再前面添加0的数字或可以转换成数字的字符串 * 返回值: 如果符合条件，返回添加0后的字条串类型，否则返回自身的字符串 */\r\n                    GUID.prototype.addZero = function(num) {\r\n                        if (Number(num).toString() != 'NaN' && num >= 0 && num < 10) {\r\n                            return '0' + Math.floor(num)\r\n                        } else {\r\n                            return num.toString()\r\n                        }\r\n                    }\r\n                    /*  * 功能：将y进制的数值，转换为x进制的数值 * 参数：第1个参数表示欲转换的数值；第2个参数表示欲转换的进制；第3个参数可选，表示当前的进制数，如不写则为10 * 返回值：返回转换后的字符串 */\r\n                    GUID.prototype.hexadecimal = function(num, x, y) {\r\n                        if (y != undefined) {\r\n                            return parseInt(num.toString(), y).toString(x)\r\n                        } else {\r\n                            return parseInt(num.toString()).toString(x)\r\n                        }\r\n                    }\r\n                    /* * 功能：格式化32位的字符串为GUID模式的字符串 * 参数：第1个参数表示32位的字符串 * 返回值：标准GUID格式的字符串 */\r\n                    GUID.prototype.formatGUID = function(guidStr) {\r\n                        var str1 = guidStr.slice(0, 8) + '-'\r\n                        var str2 = guidStr.slice(8, 12) + '-'\r\n                        var str3 = guidStr.slice(12, 16) + '-'\r\n                        var str4 = guidStr.slice(16, 20) + '-'\r\n                        var str5 = guidStr.slice(20)\r\n                        return str1 + str2 + str3 + str4 + str5\r\n                    }\r\n                }\r\n            }\r\n            let accessid, host, policyBase64, signature, g_dirname, uploadFileName, url, uploadFilesTimes\r\n            const guid = new GUID()\r\n            uploadFilesTimes = 0\r\n            if (this.uploadUseData.scTypeed == 4) {\r\n                url = this.$api.baseURL + 'api/oss/getAliOSSUploadSignWyard?dir=' + 'courseware/' + guid.newGUID() + '/'\r\n            } else {\r\n                url = this.$api.baseURL + 'api/oss/getAliOSSUploadSign?dir=' + 'courseware/' + guid.newGUID() + '/'\r\n            }\r\n            this.$axios({\r\n                url: url\r\n            }).then(r => {\r\n                if (r.data.status === 200) {\r\n                    accessid = r.data.body.accessid\r\n                    host = r.data.body.host\r\n                    policyBase64 = r.data.body.policy\r\n                    signature = r.data.body.signature\r\n                    g_dirname = r.data.body.dir\r\n\r\n                    function formatFileName(up, filename) {\r\n                        uploadFileName = encodeURIComponent(filename)\r\n                        console.log(uploadFileName)\r\n                        set_upload_param(up, filename, false)\r\n                    }\r\n\r\n                    function set_upload_param(up, filename, ret) {\r\n                        if (ret) {\r\n                            formatFileName(up, filename)\r\n                        }\r\n                        const new_multipart_params = {\r\n                            'key': g_dirname + filename,\r\n                            'policy': policyBase64,\r\n                            'OSSAccessKeyId': accessid,\r\n                            'success_action_status': '200', // 让服务端返回200,不然，默认会返回204\r\n                            'signature': signature\r\n                        }\r\n\r\n                        up.setOption({\r\n                            'url': host,\r\n                            'multipart_params': new_multipart_params\r\n                        })\r\n\r\n                        up.start()\r\n                    }\r\n                    const _this = this\r\n                    this.uploader = new plupload.Uploader({\r\n                        runtimes: 'html5,flash,silverlight,html4',\r\n                        browse_button: 'selectfiles',\r\n                        flash_swf_url: 'js/Moxie.swf',\r\n                        silverlight_xap_url: 'js/Moxie.xap',\r\n                        url: 'http://oss.aliyuncs.com',\r\n                        init: {\r\n                            PostInit: function() {\r\n                                document.getElementById('ossfile').innerHTML = ''\r\n                                document.getElementById('postfiles').onclick = function() {\r\n                                    set_upload_param(_this.uploader, '', false)\r\n                                    return false\r\n                                }\r\n                            },\r\n                            FilesAdded: function(up, files) {\r\n                                console.log(files)\r\n                                for (const i in files) {\r\n                                    _this.uploadFilesLength.push(files[i])\r\n                                }\r\n                                // console.log(_this.uploadFilesLength.length)\r\n                                // uploadFilesNo = files.length\r\n                                plupload.each(files, function(file) {\r\n                                    document.getElementById('ossfile').innerHTML += '<div id=\"' + file.id +\r\n                                            '\" style=\"padding: 10px 0;\">' + file.name + ' (' + plupload.formatSize(file\r\n                                        .size).split(' ')[0] + plupload.formatSize(file.size).split(' ')[1]\r\n                                        .toUpperCase() + ')<b></b>' +\r\n                                            '<div class=\"progress\" style=\"display:none;\"><div class=\"progress-bar\" style=\"width: 0%\"></div></div>' +\r\n                                            '</div>'\r\n                                })\r\n                            },\r\n\r\n                            BeforeUpload: function(up, file) {\r\n                                set_upload_param(up, file.name, true)\r\n                            },\r\n\r\n                            UploadProgress: function(up, file) {\r\n                                _this.updataFiles = true\r\n                                var d = document.getElementById(file.id)\r\n                                d.getElementsByClassName('progress')[0].style.display = 'block'\r\n                                d.getElementsByTagName('b')[0].innerHTML =\r\n                                        '<span style=\"display:inline-block;padding-left:10px;\">' + file.percent +\r\n                                        '%</span>'\r\n                                var prog = d.getElementsByTagName('div')[0]\r\n                                var progBar = prog.getElementsByTagName('div')[0]\r\n                                progBar.style.width = file.percent + '%'\r\n                                progBar.setAttribute('aria-valuenow', file.percent)\r\n                            },\r\n                            FileUploaded: function(up, file, info) {\r\n                                if (info.status == 200) {\r\n                                    uploadFilesTimes++\r\n                                    _this.uploadFilesArray = []\r\n                                    const aaa = {\r\n                                        cdId: _this.uploadUseData.courseId,\r\n                                        groupId: 0,\r\n                                        name: file.name,\r\n                                        url: host + '/' + g_dirname + uploadFileName\r\n                                    }\r\n                                    _this.uploadFilesArray.push(aaa)\r\n                                    _this.$axios({\r\n                                        url: _this.$api.baseURL + 'api/teacher/courseware/saveWithOssUrl',\r\n                                        method: 'post',\r\n                                        data: JSON.stringify(_this.uploadFilesArray),\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json'\r\n                                        }\r\n\r\n                                    }).then(r => {\r\n                                        _this.updataFiles = false\r\n                                        if (r.data.status == 200) {\r\n                                            _this.$message({\r\n                                                type: 'success',\r\n                                                message: '文件上传成功'\r\n                                            })\r\n                                            if (uploadFilesTimes === _this.uploadFilesLength.length) {\r\n                                                setInterval(function() {\r\n                                                    window.location.reload()\r\n                                                }, 1200)\r\n                                            }\r\n                                        }\r\n                                    }).catch(er => {\r\n\r\n                                    })\r\n                                } else {\r\n                                    document.getElementById(file.id).getElementsByTagName('b')[0].innerHTML = info.response\r\n                                }\r\n                            },\r\n                            Error: function(up, err) {\r\n                                _this.$message({\r\n                                    type: 'error',\r\n                                    message: '文件上传失败， 请刷新重试'\r\n                                })\r\n                                _this.updataFiles = false\r\n                                _this.uploader = this.$plup.destroy()\r\n                                _this.uploadDropBoxDialog = false\r\n                                _this.uploadFilesLength = []\r\n                            }\r\n                        }\r\n                    })\r\n                    this.uploader.init()\r\n                }\r\n            }).catch(er => {\r\n\r\n            })\r\n            // $.ajax({\r\n            //     url: url,\r\n            //     headers: {\r\n            //         token: token\r\n            //     },\r\n            //     success: function(r) {\r\n            //         if (r.status == 200) {\r\n            //             accessid = r.body.accessid\r\n            //             host = r.body.host\r\n            //             policyBase64 = r.body.policy\r\n            //             signature = r.body.signature\r\n            //             g_dirname = r.body.dir\r\n\r\n            //             function formatFileName(up, filename) {\r\n            //                 uploadFileName = encodeURIComponent(filename)\r\n            //                 console.log(uploadFileName)\r\n            //                 set_upload_param(up, filename, false)\r\n            //             }\r\n\r\n            //             function set_upload_param(up, filename, ret) {\r\n            //                 if (ret) {\r\n            //                     formatFileName(up, filename)\r\n            //                 }\r\n            //                 new_multipart_params = {\r\n            //                     'key': g_dirname + filename,\r\n            //                     'policy': policyBase64,\r\n            //                     'OSSAccessKeyId': accessid,\r\n            //                     'success_action_status': '200', // 让服务端返回200,不然，默认会返回204\r\n            //                     'signature': signature\r\n            //                 }\r\n\r\n            //                 up.setOption({\r\n            //                     'url': host,\r\n            //                     'multipart_params': new_multipart_params\r\n            //                 })\r\n\r\n            //                 up.start()\r\n            //             }\r\n\r\n            //             this.uploader = new plupload.Uploader({\r\n            //                 runtimes: 'html5,flash,silverlight,html4',\r\n            //                 browse_button: 'selectfiles',\r\n            //                 flash_swf_url: 'js/Moxie.swf',\r\n            //                 silverlight_xap_url: 'js/Moxie.xap',\r\n            //                 url: 'http://oss.aliyuncs.com',\r\n            //                 init: {\r\n            //                     PostInit: function() {\r\n            //                         document.getElementById('ossfile').innerHTML = ''\r\n            //                         document.getElementById('postfiles').onclick = function() {\r\n            //                             set_upload_param(this.uploader, '', false)\r\n            //                             return false\r\n            //                         }\r\n            //                     },\r\n            //                     FilesAdded: function(up, files) {\r\n            //                         console.log(files)\r\n            //                         for (var i in files) {\r\n            //                             this.uploadFilesLength.push(files)\r\n            //                         }\r\n            //                         console.log(vthism.uploadFilesLength.length)\r\n            //                         uploadFilesNo = files.length\r\n            //                         plupload.each(files, function(file) {\r\n            //                             document.getElementById('ossfile').innerHTML += '<div id=\"' + file.id +\r\n            //                                 '\" style=\"padding: 10px 0;\">' + file.name + ' (' + plupload.formatSize(file\r\n            //                                 .size).split(' ')[0] + plupload.formatSize(file.size).split(' ')[1]\r\n            //                                 .toUpperCase() + ')<b></b>' +\r\n            //                                 '<div class=\"progress\" style=\"display:none;\"><div class=\"progress-bar\" style=\"width: 0%\"></div></div>' +\r\n            //                                 '</div>'\r\n            //                         })\r\n            //                     },\r\n\r\n            //                     BeforeUpload: function(up, file) {\r\n            //                         set_upload_param(up, file.name, true)\r\n            //                     },\r\n\r\n            //                     UploadProgress: function(up, file) {\r\n            //                         this.updataFiles = true\r\n            //                         var d = document.getElementById(file.id)\r\n            //                         d.getElementsByClassName('progress')[0].style.display = 'block'\r\n            //                         d.getElementsByTagName('b')[0].innerHTML =\r\n            //                             '<span style=\"display:inline-block;padding-left:10px;\">' + file.percent +\r\n            //                             '%</span>'\r\n            //                         var prog = d.getElementsByTagName('div')[0]\r\n            //                         var progBar = prog.getElementsByTagName('div')[0]\r\n            //                         progBar.style.width = file.percent + '%'\r\n            //                         progBar.setAttribute('aria-valuenow', file.percent)\r\n            //                     },\r\n            //                     FileUploaded: function(up, file, info) {\r\n            //                         if (info.status == 200) {\r\n            //                             uploadFilesTimes++\r\n            //                             vm.uploadFilesArray = []\r\n            //                             var aaa = {\r\n            //                                 cdId: this.uploadUseData.courseId,\r\n            //                                 groupId: 0,\r\n            //                                 name: file.name,\r\n            //                                 url: host + '/' + g_dirname + uploadFileName\r\n            //                             }\r\n            //                             this.uploadFilesArray.push(aaa)\r\n\r\n            //                             $.ajax({\r\n            //                                 url: baseURL + 'api/teacher/courseware/saveWithOssUrl',\r\n            //                                 type: 'POST',\r\n            //                                 contentType: 'application/json',\r\n            //                                 headers: {\r\n            //                                     token: token\r\n            //                                 },\r\n            //                                 data: JSON.stringify(this.uploadFilesArray),\r\n            //                                 success: function(r) {\r\n            //                                     vm.updataFiles = false\r\n            //                                     if (r.status == 200) {\r\n            //                                         vm.$message({\r\n            //                                             type: 'success',\r\n            //                                             message: '文件上传成功'\r\n            //                                         })\r\n            //                                         if (uploadFilesTimes === this.uploadFilesLength.length) {\r\n            //                                             setInterval(function() {\r\n            //                                                 window.location.reload()\r\n            //                                             }, 1000)\r\n            //                                         }\r\n            //                                     }\r\n            //                                 },\r\n            //                                 error: function(er) {\r\n            //                                     this.updataFiles = false\r\n            //                                 }\r\n            //                             })\r\n            //                         } else {\r\n            //                             document.getElementById(file.id).getElementsByTagName('b')[0].innerHTML = info\r\n            //                                 .response\r\n            //                         }\r\n            //                     },\r\n            //                     Error: function(up, err) {\r\n            //                         this.$message({\r\n            //                             type: 'error',\r\n            //                             message: '文件上传失败， 请刷新重试'\r\n            //                         })\r\n            //                         this.updataFiles = false\r\n            //                         this.uploader = destroy()\r\n            //                         this.uploadDropBoxDialog = false\r\n            //                         this.uploadFilesLength = []\r\n            //                     }\r\n            //                 }\r\n            //             })\r\n            //             vm.uploader.init()\r\n            //         }\r\n            //     },\r\n            //     error: function(er) {}\r\n            // })\r\n        },\r\n        uploadDropBoxDialogClose: function() {\r\n            this.uploadDropBoxDialog = false\r\n            this.uploadFilesLength = []\r\n            this.uploader.destroy()\r\n        }\r\n\r\n    }\r\n}\r\n",null]}