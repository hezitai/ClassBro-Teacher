{"remainingRequest":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/babel-loader/lib/index.js!/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/Daobi/ClassBroTeacher/src/views/myorders/myCourse.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/src/views/myorders/myCourse.vue","mtime":1563276772000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _plupload = _interopRequireDefault(require(\"plupload\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { stringify } from 'querystring'\n// import plupload from './@/static/plupload.full.min.js'\nvar _default = {\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      loadingCourse: false,\n      uploader: null,\n      uploadFilesLength: [],\n      uploadButtonEvent: null,\n      uploadFilesArray: [],\n      updataFiles: false,\n      isTest: false,\n      uploadDropBoxDialog: false,\n      uploadUseData: {},\n      pciker1: {\n        disabledDate: function disabledDate(time) {\n          return time.getTime() < Date.now() - 8.64e7;\n        }\n      },\n      pciker2: {\n        disabledDate: function disabledDate(time) {\n          var beginDateVal = _this2.ruleForm.value1;\n\n          if (beginDateVal) {\n            return time.getTime() < beginDateVal;\n          }\n        }\n      },\n      uploadStatus: 'exception',\n      uploadPercent: 20,\n      showUploadProgress: false,\n      span: 0,\n      dropboxCourse: false,\n      fileListnum: 0,\n      fileList: [],\n      uploadImgTimes: 0,\n      formdata: new FormData(),\n      // 创建一个上传图片用的new formdata\n      btnstatus: false,\n      btnval: '确 定',\n      value1: '',\n      value2: '',\n      tableDataBegin: [],\n      tableDataName: '',\n      tableDataEnd: [],\n      currentPage: 0,\n      pageSize: 0,\n      modal: false,\n      modal_time: false,\n      total: 0,\n      limit: 15,\n      idss: [],\n      courseId: '',\n      classrooms: '',\n      classroom: '',\n      val: 1,\n      page: '',\n      ruleForm: {\n        title: '',\n        value1: '',\n        value2: '',\n        classroom: '',\n        description: '',\n        times: '',\n        explain: ''\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: '请填写课程标题',\n          trigger: 'blur'\n        }],\n        value1: [{\n          required: true,\n          message: '请选择排课时间',\n          trigger: 'change'\n        }],\n        value2: [{\n          required: true,\n          message: '请选择排课时间',\n          trigger: 'change'\n        }],\n        description: [{\n          required: true,\n          message: '请填写课程详情',\n          trigger: 'blur'\n        }],\n        times: [{\n          required: true,\n          message: '请填写赠送时长',\n          trigger: 'blur'\n        }],\n        classroom: [{\n          required: true,\n          message: '请填写赠送时长',\n          trigger: 'blur'\n        }],\n        explain: [{\n          required: true,\n          message: '请填写赠送说明',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  multipleSelection: [],\n  mounted: function mounted() {\n    this.isNTest();\n    this.getTableData();\n  },\n  methods: {\n    isNTest: function isNTest() {\n      if (this.$api.baseURL === 'http://121.43.174.41/') {\n        this.isTest = true;\n      } else {\n        this.isTest = false;\n      }\n    },\n    search: function search() {\n      this.getTableData();\n    },\n    getTableData: function getTableData() {\n      var _this3 = this;\n\n      this.loadingCourse = true;\n      this.$axios({\n        url: this.$api.baseURL + 'api/teacher/order/list',\n        method: 'get',\n        params: {\n          page: this.val,\n          limit: this.limit,\n          statused: 15,\n          // \"hasOrderPool\": true,\n          key: this.tableDataName\n        }\n      }).then(function (r) {\n        _this3.tableDataEnd = r.data.body.list;\n        _this3.total = r.data.body.totalCount;\n        _this3.pageSize = r.data.body.totalCount;\n        _this3.currentPage = r.data.body.currPage;\n        _this3.loadingCourse = false;\n      }).catch(function (er) {\n        _this3.loadingCourse = false;\n      });\n    },\n    apply: function apply(row, index) {\n      this.modal = true;\n      this.ruleForm.title = '';\n      this.ruleForm.course_time = '';\n      this.ruleForm.description = '';\n      this.courseId = row.courseId;\n    },\n    change_classroom: function change_classroom(val) {},\n    see: function see(row, index, offCourseName) {\n      // const routeData = this.$router.resolve({\n      //     name: 'searchGoods',\n      //     query: params,\n      //     params: { catId: params.catId }\n      // })\n      // window.open(routeData.href, '_blank')\n      if (row.spoType === 64) {\n        var Logistics2 = this.$router.resolve({\n          path: \"/bigClassRoom\",\n          query: {\n            id: row.courseId,\n            parentId: null\n          }\n        });\n        window.open(Logistics2.href);\n      } else if (row.courseType === 4) {\n        var Logistics1 = this.$router.resolve({\n          path: \"/sellerDetailWy\",\n          query: {\n            id: row.courseId,\n            wyid: row.offCourseName\n          }\n        });\n        window.open(Logistics1.href);\n      } else {\n        var Logistics = this.$router.resolve({\n          path: \"/sellerDetail\",\n          query: {\n            id: row.courseId\n          }\n        });\n        window.open(Logistics.href);\n      }\n    },\n    give_time: function give_time(row, index) {\n      this.ruleForm.classroom = '';\n      this.ruleForm.times = '';\n      this.ruleForm.explain = '';\n      this.modal_time = true;\n      this.courseId = row.courseId;\n      this.get_classroom();\n    },\n    submitForm: function submitForm(formName) {\n      var _this4 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          if (_this4.ruleForm.value1 >= _this4.ruleForm.value2) {\n            _this4.$message({\n              message: '开始时间不能大于结束时间',\n              type: 'warning'\n            });\n\n            return;\n          }\n\n          var sdate = new Date(_this4.ruleForm.value1);\n          var now = new Date(_this4.ruleForm.value2);\n          var days = now.getTime() - sdate.getTime();\n          var day = parseInt(days / (1000 * 60));\n\n          if (day < 30) {\n            _this4.$message({\n              message: '时间相差必须30分钟',\n              type: 'warning'\n            });\n\n            return;\n          }\n\n          _this4.btnstatus = true;\n          _this4.btnval = '加载中';\n\n          _this4.$axios({\n            url: _this4.$api.baseURL + '/api/teacher/order/putClassroom',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            method: 'post',\n            data: JSON.stringify({\n              cdId: _this4.courseId,\n              name: _this4.$refs.ruleForm.model.title,\n              startTime: _this4.$refs.ruleForm.model.value1 + ':00',\n              endTime: _this4.$refs.ruleForm.model.value2 + ':00',\n              description: _this4.$refs.ruleForm.model.description,\n              roomType: 1\n            })\n          }).then(function (r) {\n            if (r.data.status === 200) {\n              _this4.$message({\n                message: r.data.body.msg,\n                type: 'success'\n              });\n\n              _this4.btnstatus = false;\n              _this4.btnval = '确定';\n              _this4.modal = false;\n            }\n\n            if (r.data.status === 400) {\n              _this4.$message({\n                message: r.data.body.msg,\n                type: 'warning'\n              });\n\n              _this4.btnstatus = false;\n              _this4.btnval = '确定';\n            }\n          }).catch(function (r) {});\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    submitForm1: function submitForm1(formName) {\n      var _this5 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this5.btnstatus = true;\n          _this5.btnval = '加载中';\n\n          _this5.$axios({\n            url: _this5.$api.baseURL + '/api/teacher/account/presenterTime',\n            method: 'post',\n            data: {\n              classroomId: _this5.$refs.ruleForm.model.classroom,\n              time: Number(_this5.$refs.ruleForm.model.times),\n              explain: Number(_this5.$refs.ruleForm.model.explain)\n            }\n          }).then(function (r) {\n            if (r.data.status === 200) {\n              _this5.$message({\n                message: r.data.body.msg,\n                type: 'success'\n              });\n\n              _this5.btnval = '确定';\n              _this5.btnstatus = false;\n              _this5.modal = false;\n              _this5.modal_time = false;\n            }\n\n            if (r.data.status === 400) {\n              _this5.$message({\n                message: r.data.body.msg,\n                type: 'warning'\n              });\n\n              _this5.btnval = '确定';\n              _this5.btnstatus = false;\n              _this5.modal = false;\n            }\n          }).catch(function (er) {});\n        }\n      });\n    },\n    noapply: function noapply(row, index) {\n      var _this6 = this;\n\n      this.$confirm('是否要确认结课?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function (_) {\n        _this6.$axios({\n          url: _this6.$api.baseURL + 'api/teacher/order/applyFinishCourse',\n          data: {\n            courseId: row.courseId\n          },\n          method: 'post'\n        }).then(function (r) {\n          if (r.data.status === 200) {\n            _this6.$message({\n              message: '您已提交了结课申请，请等待师资主管审核',\n              type: 'success'\n            });\n\n            _this6.getTableData();\n          }\n\n          if (r.data.status === 400) {\n            _this6.$message({\n              message: r.data.body.msg,\n              type: 'warning'\n            });\n          }\n        });\n      }).catch(function (_) {});\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      console.log(\"\\u6BCF\\u9875 \".concat(val, \" \\u6761\"));\n      this.limit = val;\n      this.getTableData();\n    },\n    handleChangearea: function handleChangearea(val) {\n      var obj = {};\n      obj = this.selects.find(function (item) {\n        return item.userId === val;\n      });\n      this.userId = obj.userId;\n      this.username = obj.username;\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.val = val;\n      this.getTableData();\n    },\n    get_classroom: function get_classroom() {\n      var _this7 = this;\n\n      this.$axios({\n        url: this.$api.baseURL + '/api/teacher/order/queryClassroomsByCourseId',\n        params: {\n          courseId: this.courseId,\n          status: 14\n        }\n      }).then(function (r) {\n        _this7.classrooms = r.data.body.list;\n      }).catch(function (er) {});\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n      var ids = [];\n      this.multipleSelection.map(function (item) {\n        var id = item.id;\n        ids.push('' + id + '');\n      });\n      this.selectedIDs = ids;\n      console.log('多选', ids);\n      this.idss = this.selectedIDs;\n      console.log(this.idss);\n    },\n    uploadDropbox: function uploadDropbox(val, id) {\n      var _this8 = this;\n\n      this.uploadDropBoxDialog = true;\n      this.uploadUseData = val;\n\n      function GUID() {\n        this.date = new Date();\n        /* 判断是否初始化过，如果初始化过以下代码，则以下代码将不再执行，实际中只执行一次 */\n\n        if (typeof this.newGUID !== 'function') {\n          /* 生成GUID码 */\n          GUID.prototype.newGUID = function () {\n            this.date = new Date();\n            var guidStr = '';\n            var sexadecimalDate = this.hexadecimal(this.getGUIDDate(), 16);\n            var sexadecimalTime = this.hexadecimal(this.getGUIDTime(), 16);\n\n            for (var i = 0; i < 9; i++) {\n              guidStr += Math.floor(Math.random() * 16).toString(16);\n            }\n\n            guidStr += sexadecimalDate;\n            guidStr += sexadecimalTime;\n\n            while (guidStr.length < 32) {\n              guidStr += Math.floor(Math.random() * 16).toString(16);\n            }\n\n            return this.formatGUID(guidStr);\n          };\n          /* * 功能：获取当前日期的GUID格式，即8位数的日期：19700101 * 返回值：返回GUID日期格式的字条串 */\n\n\n          GUID.prototype.getGUIDDate = function () {\n            return this.date.getFullYear() + this.addZero(this.date.getMonth() + 1) + this.addZero(this.date.getDay());\n          };\n          /* * 功能：获取当前时间的GUID格式，即8位数的时间，包括毫秒，毫秒为2位数：12300933 * 返回值：返回GUID日期格式的字条串 */\n\n\n          GUID.prototype.getGUIDTime = function () {\n            return this.addZero(this.date.getHours()) + this.addZero(this.date.getMinutes()) + this.addZero(this.date.getSeconds()) + this.addZero(parseInt(this.date.getMilliseconds() / 10));\n          };\n          /* * 功能: 为一位数的正整数前面添加0，如果是可以转成非NaN数字的字符串也可以实现 * 参数: 参数表示准备再前面添加0的数字或可以转换成数字的字符串 * 返回值: 如果符合条件，返回添加0后的字条串类型，否则返回自身的字符串 */\n\n\n          GUID.prototype.addZero = function (num) {\n            if (Number(num).toString() != 'NaN' && num >= 0 && num < 10) {\n              return '0' + Math.floor(num);\n            } else {\n              return num.toString();\n            }\n          };\n          /*  * 功能：将y进制的数值，转换为x进制的数值 * 参数：第1个参数表示欲转换的数值；第2个参数表示欲转换的进制；第3个参数可选，表示当前的进制数，如不写则为10 * 返回值：返回转换后的字符串 */\n\n\n          GUID.prototype.hexadecimal = function (num, x, y) {\n            if (y != undefined) {\n              return parseInt(num.toString(), y).toString(x);\n            } else {\n              return parseInt(num.toString()).toString(x);\n            }\n          };\n          /* * 功能：格式化32位的字符串为GUID模式的字符串 * 参数：第1个参数表示32位的字符串 * 返回值：标准GUID格式的字符串 */\n\n\n          GUID.prototype.formatGUID = function (guidStr) {\n            var str1 = guidStr.slice(0, 8) + '-';\n            var str2 = guidStr.slice(8, 12) + '-';\n            var str3 = guidStr.slice(12, 16) + '-';\n            var str4 = guidStr.slice(16, 20) + '-';\n            var str5 = guidStr.slice(20);\n            return str1 + str2 + str3 + str4 + str5;\n          };\n        }\n      }\n\n      var accessid, host, policyBase64, signature, g_dirname, uploadFileName, url, uploadFilesTimes;\n      var guid = new GUID();\n      uploadFilesTimes = 0;\n\n      if (this.uploadUseData.scTypeed == 4) {\n        url = this.$api.baseURL + 'api/oss/getAliOSSUploadSignWyard?dir=' + 'courseware/' + guid.newGUID() + '/';\n      } else {\n        url = this.$api.baseURL + 'api/oss/getAliOSSUploadSign?dir=' + 'courseware/' + guid.newGUID() + '/';\n      }\n\n      this.$axios({\n        url: url\n      }).then(function (r) {\n        if (r.data.status === 200) {\n          var formatFileName = function formatFileName(up, filename) {\n            uploadFileName = encodeURIComponent(filename);\n            console.log(uploadFileName);\n            set_upload_param(up, filename, false);\n          };\n\n          var set_upload_param = function set_upload_param(up, filename, ret) {\n            if (ret) {\n              formatFileName(up, filename);\n            }\n\n            var new_multipart_params = {\n              'key': g_dirname + filename,\n              'policy': policyBase64,\n              'OSSAccessKeyId': accessid,\n              'success_action_status': '200',\n              // 让服务端返回200,不然，默认会返回204\n              'signature': signature\n            };\n            up.setOption({\n              'url': host,\n              'multipart_params': new_multipart_params\n            });\n            up.start();\n          };\n\n          accessid = r.data.body.accessid;\n          host = r.data.body.host;\n          policyBase64 = r.data.body.policy;\n          signature = r.data.body.signature;\n          g_dirname = r.data.body.dir;\n          var _this = _this8;\n          _this8.uploader = new _plupload.default.Uploader({\n            runtimes: 'html5,flash,silverlight,html4',\n            browse_button: 'selectfiles',\n            flash_swf_url: 'js/Moxie.swf',\n            silverlight_xap_url: 'js/Moxie.xap',\n            url: 'http://oss.aliyuncs.com',\n            init: {\n              PostInit: function PostInit() {\n                document.getElementById('ossfile').innerHTML = '';\n\n                document.getElementById('postfiles').onclick = function () {\n                  set_upload_param(_this.uploader, '', false);\n                  return false;\n                };\n              },\n              FilesAdded: function FilesAdded(up, files) {\n                console.log(files);\n\n                for (var i in files) {\n                  _this.uploadFilesLength.push(files[i]);\n                } // console.log(_this.uploadFilesLength.length)\n                // uploadFilesNo = files.length\n\n\n                _plupload.default.each(files, function (file) {\n                  document.getElementById('ossfile').innerHTML += '<div id=\"' + file.id + '\" style=\"padding: 10px 0;\">' + file.name + ' (' + _plupload.default.formatSize(file.size).split(' ')[0] + _plupload.default.formatSize(file.size).split(' ')[1].toUpperCase() + ')<b></b>' + '<div class=\"progress\" style=\"display:none;\"><div class=\"progress-bar\" style=\"width: 0%\"></div></div>' + '</div>';\n                });\n              },\n              BeforeUpload: function BeforeUpload(up, file) {\n                set_upload_param(up, file.name, true);\n              },\n              UploadProgress: function UploadProgress(up, file) {\n                _this.updataFiles = true;\n                var d = document.getElementById(file.id);\n                d.getElementsByClassName('progress')[0].style.display = 'block';\n                d.getElementsByTagName('b')[0].innerHTML = '<span style=\"display:inline-block;padding-left:10px;\">' + file.percent + '%</span>';\n                var prog = d.getElementsByTagName('div')[0];\n                var progBar = prog.getElementsByTagName('div')[0];\n                progBar.style.width = file.percent + '%';\n                progBar.setAttribute('aria-valuenow', file.percent);\n              },\n              FileUploaded: function FileUploaded(up, file, info) {\n                if (info.status == 200) {\n                  uploadFilesTimes++;\n                  _this.uploadFilesArray = [];\n                  var aaa = {\n                    cdId: _this.uploadUseData.courseId,\n                    groupId: 0,\n                    name: file.name,\n                    url: host + '/' + g_dirname + uploadFileName\n                  };\n\n                  _this.uploadFilesArray.push(aaa);\n\n                  _this.$axios({\n                    url: _this.$api.baseURL + 'api/teacher/courseware/saveWithOssUrl',\n                    method: 'post',\n                    data: JSON.stringify(_this.uploadFilesArray),\n                    headers: {\n                      'Content-Type': 'application/json'\n                    }\n                  }).then(function (r) {\n                    _this.updataFiles = false;\n\n                    if (r.data.status == 200) {\n                      _this.$message({\n                        type: 'success',\n                        message: '文件上传成功'\n                      });\n\n                      if (uploadFilesTimes === _this.uploadFilesLength.length) {\n                        setInterval(function () {\n                          window.location.reload();\n                        }, 1200);\n                      }\n                    }\n                  }).catch(function (er) {});\n                } else {\n                  document.getElementById(file.id).getElementsByTagName('b')[0].innerHTML = info.response;\n                }\n              },\n              Error: function Error(up, err) {\n                _this.$message({\n                  type: 'error',\n                  message: '文件上传失败， 请刷新重试'\n                });\n\n                _this.updataFiles = false;\n                _this.uploader = this.$plup.destroy();\n                _this.uploadDropBoxDialog = false;\n                _this.uploadFilesLength = [];\n              }\n            }\n          });\n\n          _this8.uploader.init();\n        }\n      }).catch(function (er) {}); // $.ajax({\n      //     url: url,\n      //     headers: {\n      //         token: token\n      //     },\n      //     success: function(r) {\n      //         if (r.status == 200) {\n      //             accessid = r.body.accessid\n      //             host = r.body.host\n      //             policyBase64 = r.body.policy\n      //             signature = r.body.signature\n      //             g_dirname = r.body.dir\n      //             function formatFileName(up, filename) {\n      //                 uploadFileName = encodeURIComponent(filename)\n      //                 console.log(uploadFileName)\n      //                 set_upload_param(up, filename, false)\n      //             }\n      //             function set_upload_param(up, filename, ret) {\n      //                 if (ret) {\n      //                     formatFileName(up, filename)\n      //                 }\n      //                 new_multipart_params = {\n      //                     'key': g_dirname + filename,\n      //                     'policy': policyBase64,\n      //                     'OSSAccessKeyId': accessid,\n      //                     'success_action_status': '200', // 让服务端返回200,不然，默认会返回204\n      //                     'signature': signature\n      //                 }\n      //                 up.setOption({\n      //                     'url': host,\n      //                     'multipart_params': new_multipart_params\n      //                 })\n      //                 up.start()\n      //             }\n      //             this.uploader = new plupload.Uploader({\n      //                 runtimes: 'html5,flash,silverlight,html4',\n      //                 browse_button: 'selectfiles',\n      //                 flash_swf_url: 'js/Moxie.swf',\n      //                 silverlight_xap_url: 'js/Moxie.xap',\n      //                 url: 'http://oss.aliyuncs.com',\n      //                 init: {\n      //                     PostInit: function() {\n      //                         document.getElementById('ossfile').innerHTML = ''\n      //                         document.getElementById('postfiles').onclick = function() {\n      //                             set_upload_param(this.uploader, '', false)\n      //                             return false\n      //                         }\n      //                     },\n      //                     FilesAdded: function(up, files) {\n      //                         console.log(files)\n      //                         for (var i in files) {\n      //                             this.uploadFilesLength.push(files)\n      //                         }\n      //                         console.log(vthism.uploadFilesLength.length)\n      //                         uploadFilesNo = files.length\n      //                         plupload.each(files, function(file) {\n      //                             document.getElementById('ossfile').innerHTML += '<div id=\"' + file.id +\n      //                                 '\" style=\"padding: 10px 0;\">' + file.name + ' (' + plupload.formatSize(file\n      //                                 .size).split(' ')[0] + plupload.formatSize(file.size).split(' ')[1]\n      //                                 .toUpperCase() + ')<b></b>' +\n      //                                 '<div class=\"progress\" style=\"display:none;\"><div class=\"progress-bar\" style=\"width: 0%\"></div></div>' +\n      //                                 '</div>'\n      //                         })\n      //                     },\n      //                     BeforeUpload: function(up, file) {\n      //                         set_upload_param(up, file.name, true)\n      //                     },\n      //                     UploadProgress: function(up, file) {\n      //                         this.updataFiles = true\n      //                         var d = document.getElementById(file.id)\n      //                         d.getElementsByClassName('progress')[0].style.display = 'block'\n      //                         d.getElementsByTagName('b')[0].innerHTML =\n      //                             '<span style=\"display:inline-block;padding-left:10px;\">' + file.percent +\n      //                             '%</span>'\n      //                         var prog = d.getElementsByTagName('div')[0]\n      //                         var progBar = prog.getElementsByTagName('div')[0]\n      //                         progBar.style.width = file.percent + '%'\n      //                         progBar.setAttribute('aria-valuenow', file.percent)\n      //                     },\n      //                     FileUploaded: function(up, file, info) {\n      //                         if (info.status == 200) {\n      //                             uploadFilesTimes++\n      //                             vm.uploadFilesArray = []\n      //                             var aaa = {\n      //                                 cdId: this.uploadUseData.courseId,\n      //                                 groupId: 0,\n      //                                 name: file.name,\n      //                                 url: host + '/' + g_dirname + uploadFileName\n      //                             }\n      //                             this.uploadFilesArray.push(aaa)\n      //                             $.ajax({\n      //                                 url: baseURL + 'api/teacher/courseware/saveWithOssUrl',\n      //                                 type: 'POST',\n      //                                 contentType: 'application/json',\n      //                                 headers: {\n      //                                     token: token\n      //                                 },\n      //                                 data: JSON.stringify(this.uploadFilesArray),\n      //                                 success: function(r) {\n      //                                     vm.updataFiles = false\n      //                                     if (r.status == 200) {\n      //                                         vm.$message({\n      //                                             type: 'success',\n      //                                             message: '文件上传成功'\n      //                                         })\n      //                                         if (uploadFilesTimes === this.uploadFilesLength.length) {\n      //                                             setInterval(function() {\n      //                                                 window.location.reload()\n      //                                             }, 1000)\n      //                                         }\n      //                                     }\n      //                                 },\n      //                                 error: function(er) {\n      //                                     this.updataFiles = false\n      //                                 }\n      //                             })\n      //                         } else {\n      //                             document.getElementById(file.id).getElementsByTagName('b')[0].innerHTML = info\n      //                                 .response\n      //                         }\n      //                     },\n      //                     Error: function(up, err) {\n      //                         this.$message({\n      //                             type: 'error',\n      //                             message: '文件上传失败， 请刷新重试'\n      //                         })\n      //                         this.updataFiles = false\n      //                         this.uploader = destroy()\n      //                         this.uploadDropBoxDialog = false\n      //                         this.uploadFilesLength = []\n      //                     }\n      //                 }\n      //             })\n      //             vm.uploader.init()\n      //         }\n      //     },\n      //     error: function(er) {}\n      // })\n    },\n    uploadDropBoxDialogClose: function uploadDropBoxDialogClose() {\n      this.uploadDropBoxDialog = false;\n      this.uploadFilesLength = [];\n      this.uploader.destroy();\n    }\n  }\n};\nexports.default = _default;",null]}