{"remainingRequest":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/babel-loader/lib/index.js!/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/Daobi/ClassBroTeacher/src/views/account/incomeList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/src/views/account/incomeList.vue","mtime":1562665426000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  data: function data() {\n    return {\n      pickerOptions2: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      incomeList: false,\n      all: true,\n      otgb: false,\n      teacType: false,\n      sss: true,\n      cards: '',\n      num: '',\n      carddata: [],\n      tableDataBegin: [],\n      tableDataName: '',\n      tableDataEnd: [],\n      currentPage: 0,\n      pageSize: 0,\n      txmodal: false,\n      modal: false,\n      cardmodal: false,\n      modal_time: false,\n      total: 0,\n      limit: 15,\n      idss: [],\n      courseId: '',\n      val: 1,\n      data: '',\n      value: ['', ''],\n      disabledInput: true,\n      page: '',\n      otherMoney: null,\n      money: null,\n      otherMoneys: null,\n      moneys: null,\n      finishTimeFrom: '',\n      finishTimeTo: '',\n      withdrawed: '',\n      ruleForm: {\n        price1: '',\n        price2: '',\n        card: '',\n        phone: ''\n      },\n      username: '',\n      submitFormLoading: false,\n      rules: {\n        bankOfDeposit: [{\n          required: true,\n          message: '请输入开户支行',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入预留手机号',\n          trigger: 'blur'\n        }],\n        // userName: [{\n        //     required: true,\n        //     message: '请输入开户人',\n        //     trigger: 'blur'\n        // }],\n        accountNumber: [{\n          required: true,\n          message: '请输入银行卡号',\n          trigger: 'blur'\n        }],\n        userIdCard: [{\n          required: true,\n          message: '请输入身份证号码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  multipleSelection: [],\n  mounted: function mounted() {\n    this.Time();\n    this.getMonthDays();\n    this.getMonthDay();\n    this.getTableData();\n    this.getcardlist();\n    this.getUser();\n    this.getgb();\n    this.teacinfo();\n  },\n  methods: {\n    search: function search() {\n      this.getTableData();\n      this.getgb();\n    },\n    choosedata: function choosedata(value) {\n      this.value = value;\n      this.finishTimeFrom = value[0] + ' 00:00:00';\n      this.finishTimeTo = value[1] + ' 23:23:59';\n      this.getTableData();\n      this.getgb();\n    },\n    Time: function Time(now) {\n      var year = new Date(now).getFullYear();\n      var month = new Date(now).getMonth() + 1;\n      var date = new Date(now).getDate();\n      if (month < 10) month = '0' + month;\n      if (date < 10) date = '0' + date;\n      return year + '-' + month + '-' + date;\n    },\n    getMonthDays: function getMonthDays(myMonth) {\n      var monthStartDate = new Date(new Date().getFullYear(), myMonth, 1);\n      var monthEndDate = new Date(new Date().getFullYear(), myMonth + 1, 1);\n      var days = (monthEndDate - monthStartDate) / (1000 * 60 * 60 * 24);\n      return days;\n    },\n    getMonthDay: function getMonthDay(myMonth) {\n      var finishTimeFrom = this.Time(new Date(new Date().getFullYear(), new Date().getMonth(), 1));\n      var finishTimeTo = this.Time(new Date(new Date().getFullYear(), new Date().getMonth(), this.getMonthDays(new Date().getMonth())));\n      this.finishTimeFrom = finishTimeFrom + ' 00:00:00';\n      this.finishTimeTo = finishTimeTo + ' 23:59:59';\n      this.data = [finishTimeFrom, finishTimeTo];\n    },\n    jx: function jx() {\n      var _this = this;\n\n      this.$axios({\n        url: this.$api.baseURL + '/api/teacher/account/withdrawConfirm',\n        params: {\n          'gb': this.ruleForm.price1,\n          'otgb': this.ruleForm.price2\n        }\n      }).then(function (r) {\n        if (r.data.status == 200) {\n          _this.$refs.ruleForm.model.prices = r.data.body; // vm.$message({\n          //     message: r.body.msg,\n          //     type: 'success'\n          // });\n\n          _this.getcardlist();\n        }\n\n        if (r.data.status == 400) {\n          _this.$message({\n            message: r.data.body.msg,\n            type: 'warning'\n          });\n\n          _this.getcardlist();\n        }\n      }).catch(function (er) {}); // $.ajax({\n      //     type: 'get',\n      //     url: baseURL + '/api/teacher/account/withdrawConfirm',\n      //     dataType: 'json',\n      //     headers: {\n      //         'token': token\n      //     },\n      //     data: {\n      //         'gb': vm.ruleForm.price1,\n      //         'otgb': vm.ruleForm.price2\n      //     },\n      //     success: function(r) {\n      //         if (r.status == 200) {\n      //             vm.$refs.ruleForm.model.prices = r.body,\n      //             // vm.$message({\n      //             //     message: r.body.msg,\n      //             //     type: 'success'\n      //             // });\n      //             vm.getcardlist()\n      //         }\n      //         if (r.status == 400) {\n      //             vm.$message({\n      //                 message: r.body.msg,\n      //                 type: 'warning'\n      //             })\n      //             vm.getcardlist()\n      //         }\n      //     }\n      // })\n    },\n    teacinfo: function teacinfo() {\n      var _this2 = this;\n\n      this.$axios({\n        url: this.$api.baseURL + 'api/teacher/user/getMyInfo'\n      }).then(function (r) {\n        if (r.data.status === 400) {\n          if (r.data.body.code === 4011) {\n            _this2.$router.push({\n              path: \"/login\"\n            });\n          }\n        }\n\n        var detail = r.data.body;\n\n        if (detail.type == 2) {\n          _this2.sss = false;\n          _this2.otgb = false;\n          _this2.all = false;\n        } else {\n          _this2.sss = true;\n          _this2.otgb = true;\n          _this2.all = true;\n        }\n      }).catch(function (er) {}); // $.ajax({\n      //     type: 'get',\n      //     dataType: 'json',\n      //     headers: {\n      //         'token': token\n      //     },\n      //     url: '' + baseURL + 'api/teacher/user/getMyInfo',\n      //     success: function(json) {\n      //         var detail = json.body\n      //         if (detail.type == 2) {\n      //             vm.sss = false\n      //             vm.otgb = false\n      //             vm.all = false\n      //         } else {\n      //             vm.sss = true\n      //             vm.otgb = true\n      //             vm.all = true\n      //         }\n      //     }\n      // })\n    },\n    getTableData: function getTableData() {\n      var _this3 = this;\n\n      this.incomeList = true;\n      this.$axios({\n        url: this.$api.baseURL + '/api/teacher/account/getIncomeList',\n        params: {\n          'page': this.val,\n          'limit': this.limit,\n          'key': this.tableDataName,\n          'timeFrom': this.finishTimeFrom,\n          'timeTo': this.finishTimeTo,\n          'withdrawed': 0\n        }\n      }).then(function (r) {\n        _this3.incomeList = false;\n        _this3.tableDataEnd = r.data.body.list;\n        _this3.total = r.data.body.totalCount;\n        _this3.pageSize = r.data.body.totalCount;\n        _this3.currentPage = r.data.body.currPage;\n        _this3.money = r.data.body.totalMoney;\n        _this3.otherMoney = r.data.body.totalOtherMoney;\n      }).catch(function (er) {\n        _this3.incomeList = false;\n      }); // var self = this\n      // $.ajax({\n      //     type: 'get',\n      //     dataType: 'json',\n      //     data: {\n      //         'token': token,\n      //         'page': this.val,\n      //         'limit': this.limit,\n      //         'key': this.tableDataName,\n      //         'timeFrom': this.finishTimeFrom,\n      //         'timeTo': this.finishTimeTo,\n      //         'withdrawed': 0\n      //     },\n      //     url: '' + baseURL + '/api/teacher/account/getIncomeList',\n      //     success: function(json) {\n      //         self.tableDataEnd = json.body.list\n      //         self.total = json.body.totalCount\n      //         self.pageSize = json.body.totalCount\n      //         self.currentPage = json.body.currPage\n      //         vm.money = json.body.totalMoney\n      //         vm.otherMoney = json.body.totalOtherMoney\n      //         loading.close()\n      //     }\n      // })\n    },\n    see: function see(row, index) {\n      // if (row.scTypeed == 4) {\n      //     window.open('seller_detail-wy.html?id=' + row.courseId + '&wyid=' + row.courseName +\n      //         '&iswy=true')\n      // } else {\n      //     window.open('seller_detail.html?id=' + row.courseId + '')\n      // }\n      // if (row.spoType === 64) {\n      //     const Logistics2 = this.$router.resolve({\n      //         path: `/bigClassRoom`,\n      //         query: { id: row.courseId, parentId: null }\n      //     })\n      //     window.open(Logistics2.href)\n      // } else\n      if (row.courseType === 4) {\n        var Logistics1 = this.$router.resolve({\n          path: \"/sellerDetailWy\",\n          query: {\n            id: row.courseId,\n            wyid: row.offCourseName\n          }\n        });\n        window.open(Logistics1.href);\n      } else {\n        var Logistics = this.$router.resolve({\n          path: \"/sellerDetail\",\n          query: {\n            id: row.courseId\n          }\n        });\n        window.open(Logistics.href);\n      }\n    },\n    getUser: function getUser() {\n      var _this4 = this;\n\n      this.$axios({\n        url: this.$api.baseURL + 'api/teacher/user/getMyInfo'\n      }).then(function (r) {\n        if (r.data.status === 400) {\n          if (r.data.body.code === 4011) {\n            _this4.$router.push({\n              path: \"/login\"\n            });\n          }\n        }\n\n        _this4.user = r.data.body;\n        _this4.username = r.data.body.username;\n        var type = r.body.type;\n\n        if (type == 1) {\n          _this4.disabledInput = true;\n        } else {\n          _this4.disabledInput = false;\n        }\n      }).catch(function (er) {}); // $.ajax({\n      //     type: 'get',\n      //     url: baseURL + 'api/teacher/user/getMyInfo',\n      //     dataType: 'json',\n      //     headers: {\n      //         'token': token\n      //     },\n      //     success: function(r) {\n      //         vm.user = r.body\n      //         vm.username = r.body.username\n      //         var type = r.body.type\n      //         if (type == 1) {\n      //             vm.disabledInput = true\n      //         } else {\n      //             vm.disabledInput = false\n      //         }\n      //     }\n      // })\n    },\n    getgb: function getgb() {\n      var _this5 = this;\n\n      this.$axios({\n        url: this.$api.baseURL + 'api/teacher/account/findAccountInfo',\n        params: {\n          'timeFrom': this.finishTimeFrom,\n          'timeTo': this.finishTimeTo\n        }\n      }).then(function (r) {\n        _this5.otherMoneys = Number(r.data.body.money);\n        _this5.ruleForm.price1 = r.data.body.money;\n        _this5.ruleForm.price2 = r.data.body.otherMoney;\n      }).catch(function (er) {}); // $.ajax({\n      //     type: 'get',\n      //     url: baseURL + 'api/teacher/account/findAccountInfo',\n      //     dataType: 'json',\n      //     headers: {\n      //         'token': token,\n      //         'timeFrom': this.finishTimeFrom,\n      //         'timeTo': this.finishTimeTo\n      //     },\n      //     success: function(r) {\n      //         vm.otherMoneys = Number(r.body.money)\n      //         vm.ruleForm.price1 = r.body.money\n      //         vm.ruleForm.price2 = r.body.otherMoney\n      //     }\n      // })\n    },\n    tx: function tx() {\n      this.txmodal = true;\n      this.jx();\n    },\n    apply: function apply(row, index) {\n      this.modal = true;\n    },\n    add: function add() {\n      this.cardmodal = true;\n    },\n    getcardlist: function getcardlist() {\n      var _this6 = this;\n\n      this.$axios({\n        url: this.$api.baseURL + 'api/teacher/bankcard/list',\n        params: {\n          'page': 1,\n          'limit': 1000\n        }\n      }).then(function (r) {\n        _this6.carddata = r.data.body.list;\n        _this6.cards = r.data.body.list;\n      }).catch(function (er) {}); // $.ajax({\n      //     type: 'get',\n      //     dataType: 'json',\n      //     data: {\n      //         'token': token,\n      //         'page': 1,\n      //         'limit': 1000\n      //     },\n      //     url: '' + baseURL + 'api/teacher/bankcard/list',\n      //     success: function(json) {\n      //         vm.carddata = json.body.list\n      //         vm.cards = json.body.list\n      //     },\n      //     error: function(json) {}\n      // })\n    },\n    remove: function remove(row, index) {\n      var _this7 = this;\n\n      var cardid = [];\n      cardid.push('' + row.id + '');\n      this.$confirm('是否解绑?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function (_) {\n        _this7.$axios({\n          url: _this7.$api.baseURL + 'api/teacher/bankcard/delete',\n          method: 'post',\n          data: JSON.stringify(cardid),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(function (r) {\n          if (r.data.status == 200) {\n            _this7.$message({\n              message: '解绑成功',\n              type: 'success'\n            });\n\n            _this7.getcardlist();\n          }\n\n          if (r.data.status == 400) {\n            _this7.$message({\n              message: '解绑失败',\n              type: 'warning'\n            });\n\n            _this7.getcardlist();\n          }\n        }).catch(function (er) {}); // $.ajax({\n        //     type: 'post',\n        //     contentType: 'application/json',\n        //     headers: {\n        //         'token': token\n        //     },\n        //     data: JSON.stringify(\n        //         cardid\n        //     ),\n        //     url: '' + baseURL + 'api/teacher/bankcard/delete',\n        //     success: function(json) {\n        //         if (json.status == 200) {\n        //             vm.$message({\n        //                 message: '解绑成功',\n        //                 type: 'success'\n        //             })\n        //             vm.getcardlist()\n        //         }\n        //         if (json.status == 400) {\n        //             vm.$message({\n        //                 message: '解绑失败',\n        //                 type: 'warning'\n        //             })\n        //             vm.getcardlist()\n        //         }\n        //     }\n        // })\n\n      }).catch(function (_) {});\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      console.log(\"\\u6BCF\\u9875 \".concat(val, \" \\u6761\"));\n      this.limit = val;\n      this.getTableData();\n    },\n    handleChangearea: function handleChangearea(val) {\n      var obj = {};\n      obj = this.selects.find(function (item) {\n        return item.userId === val;\n      });\n      this.userId = obj.userId;\n      this.username = obj.username;\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.val = val;\n      this.getTableData();\n    },\n    fangyu: function fangyu(row) {\n      this.submitFormLoading = true;\n      this.submitForm1(row);\n    },\n    submitForm1: function submitForm1(formName) {\n      var _this8 = this;\n\n      // vm.submitFormLoading = true;\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this8.$axios({\n            method: 'post',\n            url: _this8.$api.baseURL + '/api/teacher/account/withdrawToBank',\n            data: {\n              'gb': _this8.$refs.ruleForm.model.price1,\n              'otgb': _this8.$refs.ruleForm.model.price2,\n              'cardId': _this8.$refs.ruleForm.model.card\n            },\n            headers: {\n              'Content-type': 'application/json'\n            }\n          }).then(function (r) {\n            if (r.data.status == '200') {\n              _this8.$message({\n                message: r.data.body.msg,\n                type: 'success'\n              });\n\n              _this8.txmodal = false;\n\n              _this8.getcardlist();\n            }\n\n            if (r.data.status == '400') {\n              _this8.$message({\n                message: r.data.body.msg,\n                type: 'warning'\n              });\n            }\n\n            _this8.submitFormLoading = false;\n          }); // $.ajax({\n          //     type: 'post',\n          //     dataType: 'json',\n          //     cache: false,\n          //     // contentType: \"application/json\",\n          //     headers: {\n          //         'token': token\n          //     },\n          //     data: {\n          //         'gb': this.$refs.ruleForm.model.price1,\n          //         'otgb': this.$refs.ruleForm.model.price2,\n          //         'cardId': this.$refs.ruleForm.model.card\n          //     },\n          //     url: '' + baseURL + '/api/teacher/account/withdrawToBank',\n          //     success: function(json) {\n          //         if (json.status == '200') {\n          //             vm.$message({\n          //                 message: json.body.msg,\n          //                 type: 'success'\n          //             })\n          //             vm.txmodal = false\n          //             vm.getcardlist()\n          //         }\n          //         if (json.status == '400') {\n          //             vm.$message({\n          //                 message: json.body.msg,\n          //                 type: 'warning'\n          //             })\n          //         }\n          //         _this.submitFormLoading = false\n          //     }\n          // })\n\n        }\n      });\n    },\n    submitForm: function submitForm(formName) {\n      var _this9 = this;\n\n      // const datas = this.ruleForm\n      // const course_data = datas.course_data\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this9.$axios({\n            url: _this9.$api.baseURL + 'api/teacher/bankcard/save',\n            data: JSON.stringify({\n              // \"teacId\": vm.teacId,\n              'userName': _this9.username,\n              'idCardNo': _this9.$refs.ruleForm.model.userIdCard,\n              'reservedPhone': _this9.$refs.ruleForm.model.phone,\n              'bankOfDeposit': _this9.$refs.ruleForm.model.bankOfDeposit,\n              'accountNumber': _this9.$refs.ruleForm.model.accountNumber // \"bankName\": this.$refs.ruleForm.model.bankName,\n\n            }),\n            headers: {\n              'Content-type': 'application/json'\n            },\n            method: 'post'\n          }).then(function (r) {\n            if (r.data.status == '200') {\n              _this9.$message({\n                message: '添加银行卡成功',\n                type: 'success'\n              });\n\n              _this9.cardmodal = false;\n\n              _this9.getcardlist();\n            }\n\n            if (r.data.status == '400') {\n              _this9.$message({\n                message: r.data.body.msg,\n                type: 'warning'\n              });\n            }\n          }).catch(function (er) {}); // $.ajax({\n          //     type: 'post',\n          //     dataType: 'json',\n          //     cache: false,\n          //     contentType: 'application/json',\n          //     headers: {\n          //         'token': token\n          //     },\n          //     data: JSON.stringify({\n          //         // \"teacId\": vm.teacId,\n          //         'userName': this.username,\n          //         'idCardNo': this.$refs.ruleForm.model.userIdCard,\n          //         'reservedPhone': this.$refs.ruleForm.model\n          //             .phone,\n          //         'bankOfDeposit': this.$refs.ruleForm.model\n          //             .bankOfDeposit,\n          //         'accountNumber': this.$refs.ruleForm.model\n          //             .accountNumber\n          //         // \"bankName\": this.$refs.ruleForm.model.bankName,\n          //     }),\n          //     url: '' + baseURL + 'api/teacher/bankcard/save',\n          //     success: function(json) {\n          //         if (json.status == '200') {\n          //             vm.$message({\n          //                 message: '添加银行卡成功',\n          //                 type: 'success'\n          //             })\n          //             vm.cardmodal = false\n          //             vm.getcardlist()\n          //         }\n          //         if (json.status == '400') {\n          //             vm.$message({\n          //                 message: json.body.msg,\n          //                 type: 'warning'\n          //             })\n          //         }\n          //     }\n          // })\n\n        }\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n      var ids = [];\n      this.multipleSelection.map(function (item) {\n        var id = item.id;\n        ids.push('' + id + '');\n      });\n      this.selectedIDs = ids;\n      console.log('多选', ids);\n      this.idss = this.selectedIDs;\n      console.log(this.idss);\n    }\n  }\n};\nexports.default = _default;",null]}