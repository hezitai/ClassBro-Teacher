{"remainingRequest":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/babel-loader/lib/index.js!/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/Daobi/ClassBroTeacher/src/views/myorders/onCourse.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/src/views/myorders/onCourse.vue","mtime":1596184843592},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Daobi/ClassBroTeacher/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _auth = require(\"@/utils/auth\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  data: function data() {\n    return {\n      onCourseLoading: false,\n      browser: '',\n      tableDataBegin: [],\n      tableDataName: '',\n      tableDataEnd: [],\n      currentPage: 0,\n      pageSize: 0,\n      modal: false,\n      modal_time: false,\n      total: 0,\n      limit: 15,\n      idss: [],\n      courseId: '',\n      val: 1,\n      page: '',\n      startTime: '',\n      endTime: '',\n      tk: '',\n      ruleForm: {\n        title: '',\n        course_time: '',\n        description: ''\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: '请填写课程标题',\n          trigger: 'blur'\n        }],\n        course_time: [{\n          required: true,\n          message: '请选择排课时间',\n          trigger: 'change'\n        }],\n        description: [{\n          required: true,\n          message: '请填写课程详情',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  multipleSelection: [],\n  mounted: function mounted() {\n    this.getTableData();\n  },\n  methods: {\n    search: function search() {\n      this.getTableData();\n    },\n    getTableData: function getTableData() {\n      var _this = this;\n\n      this.onCourseLoading = true;\n      this.$axios({\n        url: this.$api.baseURL + 'api/teacher/classRoom/list',\n        params: {\n          'page': this.val,\n          'limit': this.limit,\n          'statusedArr': '1;2;4;32',\n          'key': this.tableDataName\n        }\n      }).then(function (r) {\n        _this.onCourseLoading = false;\n        _this.tableDataEnd = r.data.body.list;\n        _this.total = r.data.body.totalCount;\n        _this.pageSize = r.data.body.totalCount;\n        _this.currentPage = r.data.body.currPage;\n      }).catch(function (r) {\n        _this.onCourseLoading = false;\n      }); // var self = this\n      // $.ajax({\n      //     type: 'get',\n      //     dataType: 'json',\n      //     data: {\n      //         'token': token,\n      //         'page': this.val,\n      //         'limit': this.limit,\n      //         'statusedArr': '1;2;4;32',\n      //         'key': this.tableDataName\n      //     },\n      //     url: '' + baseURL + 'api/teacher/classRoom/list',\n      //     success: function(json) {\n      //         self.tableDataEnd = json.body.list\n      //         self.total = json.body.totalCount\n      //         self.pageSize = json.body.totalCount\n      //         self.currentPage = json.body.currPage\n      //     }\n      // })\n    },\n    apply: function apply(row, index) {\n      this.modal = true;\n      this.ruleForm = this.$refs.formName;\n      this.courseId = row.id;\n      this.cdId = row.cdId;\n      this.startTime = row.startTime;\n      this.endTime = row.endTime;\n      this.description = row.description;\n      this.time = [row.startTime, row.endTime];\n      this.ruleForm = {\n        title: row.name,\n        description: row.description,\n        course_time: [row.startTime, row.endTime]\n      };\n    },\n    cancel: function cancel(row, index) {\n      var _this2 = this;\n\n      this.$confirm('是否要取消排课?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function (_) {\n        _this2.$axios({\n          url: _this2.$api.baseURL + 'api/teacher/order/cancelClassroom',\n          method: 'post',\n          data: {\n            'classroomId': row.id\n          }\n        }).then(function (r) {\n          if (r.data.status == 200) {\n            _this2.$message({\n              message: r.data.body.msg,\n              type: 'success'\n            });\n\n            _this2.getTableData();\n          }\n\n          if (r.data.status == 400) {\n            _this2.$message({\n              message: r.data.body.msg,\n              type: 'warning'\n            });\n\n            _this2.getTableData();\n          }\n        }).catch(function (er) {}); // $.ajax({\n        //     type: 'post',\n        //     dataType: 'json',\n        //     data: {\n        //         'token': token,\n        //         'classroomId': row.id\n        //     },\n        //     url: '' + baseURL + 'api/teacher/order/cancelClassroom',\n        //     success: function(json) {\n        //         if (json.status == 200) {\n        //             vm.$message({\n        //                 message: json.body.msg,\n        //                 type: 'success'\n        //             })\n        //             vm.getTableData()\n        //         }\n        //         if (json.status == 400) {\n        //             vm.$message({\n        //                 message: json.body.msg,\n        //                 type: 'warning'\n        //             })\n        //             vm.getTableData()\n        //         }\n        //     }\n        // })\n\n      }).catch(function (_) {});\n    },\n    sees: function sees(row, index) {\n      // if (row.spoType == 64) {\n      //     window.open('bigClassroomInfo.html?id=' + row.cdId + '')\n      // } else if (row.scTypeed == 4) {\n      //     window.open('seller_detail-wy.html?id=' + row.cdId + '&wyid=' + row.offCourseName + '&iswy=true')\n      // } else {\n      //     window.open('seller_detail.html?id=' + row.cdId + '')\n      // }\n      if (row.spoType === 64) {\n        var Logistics2 = this.$router.resolve({\n          path: \"/bigClassRoom\",\n          query: {\n            id: row.cdId,\n            parentId: null\n          }\n        });\n        window.open(Logistics2.href);\n      } else if (row.courseType === 4) {\n        var Logistics1 = this.$router.resolve({\n          path: \"/sellerDetailWy\",\n          query: {\n            id: row.cdId,\n            wyid: row.offCourseName\n          }\n        });\n        window.open(Logistics1.href);\n      } else {\n        var Logistics = this.$router.resolve({\n          path: \"/sellerDetail\",\n          query: {\n            id: row.cdId\n          }\n        });\n        window.open(Logistics.href);\n      }\n    },\n    get_studjoinurl: function get_studjoinurl(row, index) {\n      alert(row.studentJoinUrl);\n    },\n    // compile(code) {\n    //     var code = getLocal('teactoken')\n    //     var c = String.fromCharCode(code.charCodeAt(0) + code.length)\n    //     for (var i = 1; i < code.length; i++) {\n    //         c += String.fromCharCode(code.charCodeAt(i) + code.charCodeAt(i - 1))\n    //     }\n    //     this.tk = escape(c)\n    // },\n    in_classroom: function in_classroom(row, index) {\n      var code = window.localStorage.getItem('teactoken');\n      var c = String.fromCharCode(code.charCodeAt(0) + code.length);\n\n      for (var i = 1; i < code.length; i++) {\n        c += String.fromCharCode(code.charCodeAt(i) + code.charCodeAt(i - 1));\n      }\n\n      var tk = escape(c);\n      window.open(this.$api.url + 'static-resource/tkcloud/giveLessons.html?classroomId=' + row.id + '&iden=teac&tk=' + tk + ''); // var isOpera = (!!window.opr && !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n      //     var isFirefox = typeof InstallTrigger !== 'undefined';\n      //     var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || safari.pushNotification);\n      //     var isIE = /*@cc_on!@*/false || !!document.documentMode;\n      //     var isEdge = !isIE && !!window.StyleMedia;\n      //     var isChrome = !!window.chrome && !!window.chrome.webstore;\n      //     var isBlink = (isChrome || isOpera) && !!window.CSS;\n      //     console.log(isChrome);\n      //     if(isChrome == true){\n      //       window.open(row.teacherJoinUrl);\n      //     }else{\n      //       alert(\"您当前使用的不是谷歌浏览器,点击下载浏览器\")\n      //       window.open(\"https://sm.myapp.com/original/Browser/70.0.3538.67_chrome_installer_x64.exe\");\n      //     }\n    },\n    submitForm: function submitForm(formName) {\n      var _this3 = this;\n\n      // var self = this\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this3.$axios({\n            url: _this3.$api.baseURL + '/api/teacher/order/updateClassroom',\n            data: JSON.stringify({\n              id: _this3.courseId,\n              name: _this3.$refs.ruleForm.model.title,\n              cdId: _this3.cdId,\n              startTime: _this3.$refs.ruleForm.model.course_time[0],\n              endTime: _this3.$refs.ruleForm.model.course_time[1],\n              description: _this3.$refs.ruleForm.model.description\n            }),\n            method: 'post',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(function (r) {\n            if (r.data.status == 200) {\n              _this3.$message({\n                message: r.data.body.msg,\n                type: 'success'\n              });\n\n              _this3.modal = false;\n\n              _this3.getTableData();\n            }\n\n            if (r.data.status == 400) {\n              _this3.$message({\n                message: r.data.body.msg,\n                type: 'warning'\n              });\n\n              _this3.modal = false;\n\n              _this3.getTableData();\n            }\n          }).catch(function (er) {}); // $.ajax({\n          //     type: 'post',\n          //     contentType: 'application/json',\n          //     headers: {\n          //         'token': token\n          //     },\n          //     data: JSON.stringify({\n          //         id: vm.courseId,\n          //         name: this.$refs.ruleForm.model.title,\n          //         cdId: vm.cdId,\n          //         startTime: this.$refs.ruleForm.model.course_time[0],\n          //         endTime: this.$refs.ruleForm.model.course_time[1],\n          //         description: this.$refs.ruleForm.model.description\n          //     }),\n          //     url: '' + baseURL + '/api/teacher/order/updateClassroom',\n          //     success: function(json) {\n          //         if (json.status == 200) {\n          //             vm.$message({\n          //                 message: json.body.msg,\n          //                 type: 'success'\n          //             })\n          //             vm.modal = false\n          //             vm.getTableData()\n          //         }\n          //         if (json.status == 400) {\n          //             vm.$message({\n          //                 message: json.body.msg,\n          //                 type: 'warning'\n          //             })\n          //             vm.modal = false\n          //             this.getTableData()\n          //         }\n          //     }\n          // })\n\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    end_classroom: function end_classroom(row, index) {\n      var _this4 = this;\n\n      this.$confirm('是否要结束课堂?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function (_) {\n        _this4.$axios({\n          url: _this4.$api.baseURL + 'api/teacher/order/finishClassroom',\n          method: 'post',\n          data: {\n            'classroomId': row.id\n          }\n        }).then(function (r) {\n          if (r.data.status == 200) {\n            _this4.$message({\n              message: r.data.body.msg,\n              type: 'success'\n            });\n\n            _this4.getTableData();\n          }\n\n          if (r.data.status == 400) {\n            _this4.$message({\n              message: r.data.body.msg,\n              type: 'warning'\n            });\n\n            _this4.getTableData();\n          }\n        }); // $.ajax({\n        //     type: 'post',\n        //     dataType: 'json',\n        //     data: {\n        //         'token': token,\n        //         'classroomId': row.id\n        //     },\n        //     url: '' + baseURL + 'api/teacher/order/finishClassroom',\n        //     success: function(json) {\n        //         if (json.status == 200) {\n        //             vm.$message({\n        //                 message: json.body.msg,\n        //                 type: 'success'\n        //             })\n        //             vm.getTableData()\n        //         }\n        //         if (json.status == 400) {\n        //             vm.$message({\n        //                 message: json.body.msg,\n        //                 type: 'warning'\n        //             })\n        //             vm.getTableData()\n        //         }\n        //     }\n        // })\n\n      }).catch(function (_) {});\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      console.log(\"\\u6BCF\\u9875 \".concat(val, \" \\u6761\"));\n      this.limit = val;\n      this.getTableData();\n    },\n    handleChangearea: function handleChangearea(val) {\n      var obj = {};\n      obj = this.selects.find(function (item) {\n        return item.userId === val;\n      });\n      this.userId = obj.userId;\n      this.username = obj.username;\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.val = val;\n      this.getTableData();\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n      var ids = [];\n      this.multipleSelection.map(function (item) {\n        var id = item.id;\n        ids.push('' + id + '');\n      });\n      this.selectedIDs = ids;\n      console.log('多选', ids);\n      this.idss = this.selectedIDs;\n      console.log(this.idss);\n    }\n  }\n};\nexports.default = _default;",null]}